
Electric_WaterHeater.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000104a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000001a  00800060  0000104a  000010de  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000001a  0080007a  0080007a  000010f8  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000010f8  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00001128  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000350  00000000  00000000  00001164  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002211  00000000  00000000  000014b4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000e4b  00000000  00000000  000036c5  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000015d6  00000000  00000000  00004510  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000800  00000000  00000000  00005ae8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000cb9  00000000  00000000  000062e8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000f47  00000000  00000000  00006fa1  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000002a0  00000000  00000000  00007ee8  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 0c 05 	jmp	0xa18	; 0xa18 <__vector_1>
       8:	0c 94 35 05 	jmp	0xa6a	; 0xa6a <__vector_2>
       c:	0c 94 5e 05 	jmp	0xabc	; 0xabc <__vector_3>
      10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      1c:	0c 94 2a 06 	jmp	0xc54	; 0xc54 <__vector_7>
      20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      24:	0c 94 51 06 	jmp	0xca2	; 0xca2 <__vector_9>
      28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      2c:	0c 94 d8 05 	jmp	0xbb0	; 0xbb0 <__vector_11>
      30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      40:	0c 94 f7 02 	jmp	0x5ee	; 0x5ee <__vector_16>
      44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	10 e0       	ldi	r17, 0x00	; 0
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	ea e4       	ldi	r30, 0x4A	; 74
      68:	f0 e1       	ldi	r31, 0x10	; 16
      6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0
      70:	aa 37       	cpi	r26, 0x7A	; 122
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
      76:	20 e0       	ldi	r18, 0x00	; 0
      78:	aa e7       	ldi	r26, 0x7A	; 122
      7a:	b0 e0       	ldi	r27, 0x00	; 0
      7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
      7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
      80:	a4 39       	cpi	r26, 0x94	; 148
      82:	b2 07       	cpc	r27, r18
      84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
      86:	0e 94 d5 02 	call	0x5aa	; 0x5aa <main>
      8a:	0c 94 23 08 	jmp	0x1046	; 0x1046 <_exit>

0000008e <__bad_interrupt>:
      8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <Temperature_Setting_Up>:
}

void Temperature_Setting_Up()
{
	// Check if the button has been pressed once
	if (counter_up != 0)
      92:	80 91 80 00 	lds	r24, 0x0080	; 0x800080 <counter_up>
      96:	88 23       	and	r24, r24
      98:	b9 f0       	breq	.+46     	; 0xc8 <Temperature_Setting_Up+0x36>
	{
		 // Check if the system is ON
		if (System_Mode == SYSTEM_ON)
      9a:	80 91 83 00 	lds	r24, 0x0083	; 0x800083 <System_Mode>
      9e:	81 30       	cpi	r24, 0x01	; 1
      a0:	c1 f4       	brne	.+48     	; 0xd2 <Temperature_Setting_Up+0x40>
		{
			// Reset 5-second counter and increase temperature setting
			counter_5sec = 0;
      a2:	10 92 81 00 	sts	0x0081, r1	; 0x800081 <counter_5sec>
			Temp_Set += 5;
      a6:	80 91 63 00 	lds	r24, 0x0063	; 0x800063 <Temp_Set>
      aa:	8b 5f       	subi	r24, 0xFB	; 251
      ac:	80 93 63 00 	sts	0x0063, r24	; 0x800063 <Temp_Set>
			// Ensure the temperature setting does not exceed the maximum limit
			if (Temp_Set >= 75)
      b0:	8b 34       	cpi	r24, 0x4B	; 75
      b2:	18 f0       	brcs	.+6      	; 0xba <Temperature_Setting_Up+0x28>
			{
				Temp_Set = 75;
      b4:	8b e4       	ldi	r24, 0x4B	; 75
      b6:	80 93 63 00 	sts	0x0063, r24	; 0x800063 <Temp_Set>
			}
			// Save the new temperature setting to EEPROM
			EEPROM_Send(0, Temp_Set);
      ba:	60 91 63 00 	lds	r22, 0x0063	; 0x800063 <Temp_Set>
      be:	80 e0       	ldi	r24, 0x00	; 0
      c0:	90 e0       	ldi	r25, 0x00	; 0
      c2:	0e 94 8d 04 	call	0x91a	; 0x91a <EEPROM_Send>
      c6:	08 95       	ret
		}
	}
	else
	{
		// Increment the button hold counter and reset 5-second counter
		counter_up++;
      c8:	8f 5f       	subi	r24, 0xFF	; 255
      ca:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <counter_up>
		counter_5sec = 0;
      ce:	10 92 81 00 	sts	0x0081, r1	; 0x800081 <counter_5sec>
      d2:	08 95       	ret

000000d4 <Temperature_Setting_Down>:
}

void Temperature_Setting_Down()
{
// Check if the button has been pressed once
	if (counter_down != 0)
      d4:	80 91 7f 00 	lds	r24, 0x007F	; 0x80007f <counter_down>
      d8:	88 23       	and	r24, r24
      da:	b9 f0       	breq	.+46     	; 0x10a <Temperature_Setting_Down+0x36>
	{
		 // Check if the system is ON
		if (System_Mode == SYSTEM_ON)
      dc:	80 91 83 00 	lds	r24, 0x0083	; 0x800083 <System_Mode>
      e0:	81 30       	cpi	r24, 0x01	; 1
      e2:	c1 f4       	brne	.+48     	; 0x114 <Temperature_Setting_Down+0x40>
		{
			// Reset 5-second counter and decrease temperature setting
			counter_5sec = 0;
      e4:	10 92 81 00 	sts	0x0081, r1	; 0x800081 <counter_5sec>
			Temp_Set -= 5;
      e8:	80 91 63 00 	lds	r24, 0x0063	; 0x800063 <Temp_Set>
      ec:	85 50       	subi	r24, 0x05	; 5
      ee:	80 93 63 00 	sts	0x0063, r24	; 0x800063 <Temp_Set>
			// Ensure the temperature setting does not go below the minimum limit
			if (Temp_Set <= 35)
      f2:	84 32       	cpi	r24, 0x24	; 36
      f4:	18 f4       	brcc	.+6      	; 0xfc <Temperature_Setting_Down+0x28>
			{
				Temp_Set = 35;
      f6:	83 e2       	ldi	r24, 0x23	; 35
      f8:	80 93 63 00 	sts	0x0063, r24	; 0x800063 <Temp_Set>
			}
			// Save the new temperature setting to EEPROM
			EEPROM_Send(0, Temp_Set);
      fc:	60 91 63 00 	lds	r22, 0x0063	; 0x800063 <Temp_Set>
     100:	80 e0       	ldi	r24, 0x00	; 0
     102:	90 e0       	ldi	r25, 0x00	; 0
     104:	0e 94 8d 04 	call	0x91a	; 0x91a <EEPROM_Send>
     108:	08 95       	ret
		}
	}
	else
	{
// Increment the button hold counter and reset 5-second counter
		counter_down++;
     10a:	8f 5f       	subi	r24, 0xFF	; 255
     10c:	80 93 7f 00 	sts	0x007F, r24	; 0x80007f <counter_down>
		counter_5sec = 0;
     110:	10 92 81 00 	sts	0x0081, r1	; 0x800081 <counter_5sec>
     114:	08 95       	ret

00000116 <ADC_Reading_Timer>:
}

void ADC_Reading_Timer()
{
	static u16 counter1 = 0;
	counter1++;
     116:	80 91 7d 00 	lds	r24, 0x007D	; 0x80007d <counter1.1862>
     11a:	90 91 7e 00 	lds	r25, 0x007E	; 0x80007e <counter1.1862+0x1>
     11e:	01 96       	adiw	r24, 0x01	; 1
     120:	90 93 7e 00 	sts	0x007E, r25	; 0x80007e <counter1.1862+0x1>
     124:	80 93 7d 00 	sts	0x007D, r24	; 0x80007d <counter1.1862>
	// Check if the timer has reached the overflow count (100 ms)
	if (counter1 == OF_Count) // 100 ms
     128:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <OF_Count>
     12c:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <OF_Count+0x1>
     130:	82 17       	cp	r24, r18
     132:	93 07       	cpc	r25, r19
     134:	39 f4       	brne	.+14     	; 0x144 <ADC_Reading_Timer+0x2e>
	{
		counter1 = 0;
     136:	10 92 7e 00 	sts	0x007E, r1	; 0x80007e <counter1.1862+0x1>
     13a:	10 92 7d 00 	sts	0x007D, r1	; 0x80007d <counter1.1862>
		ADC_Vid_Start_Conversion(ADC0);
     13e:	80 e0       	ldi	r24, 0x00	; 0
     140:	0e 94 e7 02 	call	0x5ce	; 0x5ce <ADC_Vid_Start_Conversion>
     144:	08 95       	ret

00000146 <ON_OFF_Behaviour>:
}

void ON_OFF_Behaviour()
{
 // Check if the system is currently OFF
	if (System_Mode == SYSTEM_OFF)
     146:	80 91 83 00 	lds	r24, 0x0083	; 0x800083 <System_Mode>
     14a:	81 11       	cpse	r24, r1
     14c:	0a c0       	rjmp	.+20     	; 0x162 <ON_OFF_Behaviour+0x1c>
	{
// Retrieve last saved temperature setting from EEPROM
		Temp_Set = EEPROM_Recieve(0);
     14e:	80 e0       	ldi	r24, 0x00	; 0
     150:	90 e0       	ldi	r25, 0x00	; 0
     152:	0e 94 a7 04 	call	0x94e	; 0x94e <EEPROM_Recieve>
     156:	80 93 63 00 	sts	0x0063, r24	; 0x800063 <Temp_Set>
		// Set system state to ON
		System_Mode = SYSTEM_ON;
     15a:	81 e0       	ldi	r24, 0x01	; 1
     15c:	80 93 83 00 	sts	0x0083, r24	; 0x800083 <System_Mode>
     160:	08 95       	ret
	}
	else
	{
	// Turn off display and all heating/cooling elements
		SSD_DIS();
     162:	0e 94 28 02 	call	0x450	; 0x450 <SSD_DIS>
		Heating_ElementLed_OFF();
     166:	0e 94 d8 01 	call	0x3b0	; 0x3b0 <Heating_ElementLed_OFF>
		CoolingElement_OFF();
     16a:	0e 94 f5 01 	call	0x3ea	; 0x3ea <CoolingElement_OFF>
		HeatingElement_OFF();
     16e:	0e 94 e9 01 	call	0x3d2	; 0x3d2 <HeatingElement_OFF>
		// Save current temperature setting to EEPROM
		EEPROM_Send(0, Temp_Set);
     172:	60 91 63 00 	lds	r22, 0x0063	; 0x800063 <Temp_Set>
     176:	80 e0       	ldi	r24, 0x00	; 0
     178:	90 e0       	ldi	r25, 0x00	; 0
     17a:	0e 94 8d 04 	call	0x91a	; 0x91a <EEPROM_Send>
		// Set system state to OFF
		System_Mode = SYSTEM_OFF;
     17e:	10 92 83 00 	sts	0x0083, r1	; 0x800083 <System_Mode>
     182:	08 95       	ret

00000184 <TemperatureMonitoringTask>:
}

void TemperatureMonitoringTask()
{
	// Check if the system is ON and the heating element is active
	if ((System_Mode == SYSTEM_ON) && (DIO_u8_Get_Pin_Val(HEATINGELEMENT_PORT, HEATINGELEMENT_PIN) == HIGH))
     184:	80 91 83 00 	lds	r24, 0x0083	; 0x800083 <System_Mode>
     188:	81 30       	cpi	r24, 0x01	; 1
     18a:	49 f4       	brne	.+18     	; 0x19e <TemperatureMonitoringTask+0x1a>
     18c:	61 e0       	ldi	r22, 0x01	; 1
     18e:	83 e0       	ldi	r24, 0x03	; 3
     190:	0e 94 05 04 	call	0x80a	; 0x80a <DIO_u8_Get_Pin_Val>
     194:	81 30       	cpi	r24, 0x01	; 1
     196:	19 f4       	brne	.+6      	; 0x19e <TemperatureMonitoringTask+0x1a>
	{
		HeatingElement_Led_TOGGLE();
     198:	0e 94 de 01 	call	0x3bc	; 0x3bc <HeatingElement_Led_TOGGLE>
     19c:	02 c0       	rjmp	.+4      	; 0x1a2 <TemperatureMonitoringTask+0x1e>
	}
	else
	{
		Heating_ElementLed_OFF();
     19e:	0e 94 d8 01 	call	0x3b0	; 0x3b0 <Heating_ElementLed_OFF>
	}
	 // Check if the system is in setting mode
	if (SettingMode_Flag == 1)
     1a2:	80 91 82 00 	lds	r24, 0x0082	; 0x800082 <SettingMode_Flag>
     1a6:	81 30       	cpi	r24, 0x01	; 1
     1a8:	11 f4       	brne	.+4      	; 0x1ae <TemperatureMonitoringTask+0x2a>
	{
		// Toggle Seven Segment Display
		SSD_TOGGLE();
     1aa:	0e 94 34 02 	call	0x468	; 0x468 <SSD_TOGGLE>
	}
	// Check if the system is ON
	if (System_Mode == SYSTEM_ON)
     1ae:	80 91 83 00 	lds	r24, 0x0083	; 0x800083 <System_Mode>
     1b2:	81 30       	cpi	r24, 0x01	; 1
     1b4:	41 f5       	brne	.+80     	; 0x206 <TemperatureMonitoringTask+0x82>
	{
		counter_5sec++;
     1b6:	80 91 81 00 	lds	r24, 0x0081	; 0x800081 <counter_5sec>
     1ba:	8f 5f       	subi	r24, 0xFF	; 255
     1bc:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <counter_5sec>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     1c0:	2f ef       	ldi	r18, 0xFF	; 255
     1c2:	80 e7       	ldi	r24, 0x70	; 112
     1c4:	92 e0       	ldi	r25, 0x02	; 2
     1c6:	21 50       	subi	r18, 0x01	; 1
     1c8:	80 40       	sbci	r24, 0x00	; 0
     1ca:	90 40       	sbci	r25, 0x00	; 0
     1cc:	e1 f7       	brne	.-8      	; 0x1c6 <TemperatureMonitoringTask+0x42>
     1ce:	00 c0       	rjmp	.+0      	; 0x1d0 <TemperatureMonitoringTask+0x4c>
     1d0:	00 00       	nop

		_delay_ms(50);
	// Check if 5 seconds have passed
		if (counter_5sec > 5)
     1d2:	80 91 81 00 	lds	r24, 0x0081	; 0x800081 <counter_5sec>
     1d6:	86 30       	cpi	r24, 0x06	; 6
     1d8:	68 f0       	brcs	.+26     	; 0x1f4 <TemperatureMonitoringTask+0x70>
		{
			counter_up = 0;
     1da:	10 92 80 00 	sts	0x0080, r1	; 0x800080 <counter_up>
			counter_down = 0;
     1de:	10 92 7f 00 	sts	0x007F, r1	; 0x80007f <counter_down>
			// Enable Seven Segment Display and show average temperature
			SSD_EN();
     1e2:	0e 94 2e 02 	call	0x45c	; 0x45c <SSD_EN>
			SEVEN_SEGMENT_Write_Val(Temp_AVG);
     1e6:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
     1ea:	0e 94 39 02 	call	0x472	; 0x472 <SEVEN_SEGMENT_Write_Val>
			SettingMode_Flag = 0;
     1ee:	10 92 82 00 	sts	0x0082, r1	; 0x800082 <SettingMode_Flag>
     1f2:	08 95       	ret
		}
		else
		{
			// Enable Seven Segment Display and show current temperature setting
			SSD_EN();
     1f4:	0e 94 2e 02 	call	0x45c	; 0x45c <SSD_EN>
			SEVEN_SEGMENT_Write_Val(Temp_Set);
     1f8:	80 91 63 00 	lds	r24, 0x0063	; 0x800063 <Temp_Set>
     1fc:	0e 94 39 02 	call	0x472	; 0x472 <SEVEN_SEGMENT_Write_Val>
			SettingMode_Flag = 1;
     200:	81 e0       	ldi	r24, 0x01	; 1
     202:	80 93 82 00 	sts	0x0082, r24	; 0x800082 <SettingMode_Flag>
     206:	08 95       	ret

00000208 <EEPROM_Init>:

// Initializing EEPROM with temperature = 60 if no temperature is stored yet
void EEPROM_Init()
{
	u8 Loc_Var = 0;
	Loc_Var = EEPROM_Recieve(0);
     208:	80 e0       	ldi	r24, 0x00	; 0
     20a:	90 e0       	ldi	r25, 0x00	; 0
     20c:	0e 94 a7 04 	call	0x94e	; 0x94e <EEPROM_Recieve>
	// Check if EEPROM has been initialized
	if (Loc_Var == 0)
     210:	81 11       	cpse	r24, r1
     212:	06 c0       	rjmp	.+12     	; 0x220 <EEPROM_Init+0x18>
	{
		// If not initialized, set default temperature and store it in EEPROM
		EEPROM_Send(0, Temp_Set);
     214:	60 91 63 00 	lds	r22, 0x0063	; 0x800063 <Temp_Set>
     218:	80 e0       	ldi	r24, 0x00	; 0
     21a:	90 e0       	ldi	r25, 0x00	; 0
     21c:	0e 94 8d 04 	call	0x91a	; 0x91a <EEPROM_Send>
     220:	08 95       	ret

00000222 <System_Init>:

void System_Init()
{

	/*Global Interrupt */
	GIE_Vid_Enable();
     222:	0e 94 87 05 	call	0xb0e	; 0xb0e <GIE_Vid_Enable>

	/* External Interrupt 0 for increasing temperature setting */
	EXT_Vid_Interrupt_Init0(RISING_EDGE);
     226:	80 e0       	ldi	r24, 0x00	; 0
     228:	0e 94 ae 04 	call	0x95c	; 0x95c <EXT_Vid_Interrupt_Init0>
	EXT_Vid_Interrupt0();
     22c:	0e 94 eb 04 	call	0x9d6	; 0x9d6 <EXT_Vid_Interrupt0>
	EXT_Vid_Set_CallBack(Temperature_Setting_Up);
     230:	89 e4       	ldi	r24, 0x49	; 73
     232:	90 e0       	ldi	r25, 0x00	; 0
     234:	0e 94 fd 04 	call	0x9fa	; 0x9fa <EXT_Vid_Set_CallBack>

	 /* External Interrupt 1 for decreasing temperature setting */
	EXT_Vid_Interrupt_Init1(RISING_EDGE);
     238:	80 e0       	ldi	r24, 0x00	; 0
     23a:	0e 94 c7 04 	call	0x98e	; 0x98e <EXT_Vid_Interrupt_Init1>
	EXT_Vid_Interrupt1();
     23e:	0e 94 f1 04 	call	0x9e2	; 0x9e2 <EXT_Vid_Interrupt1>
	EXT_Vid_Set_CallBack_2(Temperature_Setting_Down);
     242:	8a e6       	ldi	r24, 0x6A	; 106
     244:	90 e0       	ldi	r25, 0x00	; 0
     246:	0e 94 02 05 	call	0xa04	; 0xa04 <EXT_Vid_Set_CallBack_2>

	/*External Interrupt 2 for Switching ON/OFF System */
	EXT_Vid_Interrupt_Init2(RISING_EDGE);
     24a:	80 e0       	ldi	r24, 0x00	; 0
     24c:	0e 94 e0 04 	call	0x9c0	; 0x9c0 <EXT_Vid_Interrupt_Init2>
	EXT_Vid_Interrupt2();
     250:	0e 94 f7 04 	call	0x9ee	; 0x9ee <EXT_Vid_Interrupt2>
	EXT_Vid_Set_CallBack_3(ON_OFF_Behaviour);
     254:	83 ea       	ldi	r24, 0xA3	; 163
     256:	90 e0       	ldi	r25, 0x00	; 0
     258:	0e 94 07 05 	call	0xa0e	; 0xa0e <EXT_Vid_Set_CallBack_3>

	/* Set pin directions for buttons */
	DIO_Vid_Set_Pin_Dir(UP_BUTTON_PORT, UP_BUTTON_PIN, INPUT);
     25c:	40 e0       	ldi	r20, 0x00	; 0
     25e:	63 e0       	ldi	r22, 0x03	; 3
     260:	83 e0       	ldi	r24, 0x03	; 3
     262:	0e 94 23 03 	call	0x646	; 0x646 <DIO_Vid_Set_Pin_Dir>
	DIO_Vid_Set_Pin_Dir(DOWN_BUTTON_PORT, DOWN_BUTTON_PIN, INPUT);
     266:	40 e0       	ldi	r20, 0x00	; 0
     268:	62 e0       	ldi	r22, 0x02	; 2
     26a:	81 e0       	ldi	r24, 0x01	; 1
     26c:	0e 94 23 03 	call	0x646	; 0x646 <DIO_Vid_Set_Pin_Dir>
	DIO_Vid_Set_Pin_Dir(ON_OFF_PORT, ON_OFF_PIN, INPUT);
     270:	40 e0       	ldi	r20, 0x00	; 0
     272:	62 e0       	ldi	r22, 0x02	; 2
     274:	83 e0       	ldi	r24, 0x03	; 3
     276:	0e 94 23 03 	call	0x646	; 0x646 <DIO_Vid_Set_Pin_Dir>
	// Initialize heating and cooling elements
	Heater_Cooler_Init();
     27a:	0e 94 c8 01 	call	0x390	; 0x390 <Heater_Cooler_Init>

	/*Seven Segment Initialization */
	SSD_Vid_Init();
     27e:	0e 94 fb 01 	call	0x3f6	; 0x3f6 <SSD_Vid_Init>

	/* ADC Initialization */
	ADC_Vid_Init();
     282:	0e 94 da 02 	call	0x5b4	; 0x5b4 <ADC_Vid_Init>
    /* ADC Interrupt Enable */
	ADC_Vid_Interrupt_Enable();
     286:	0e 94 f1 02 	call	0x5e2	; 0x5e2 <ADC_Vid_Interrupt_Enable>
	ADC_Set_Call_Back(Temperature_Sensing);
     28a:	82 e8       	ldi	r24, 0x82	; 130
     28c:	91 e0       	ldi	r25, 0x01	; 1
     28e:	0e 94 1e 03 	call	0x63c	; 0x63c <ADC_Set_Call_Back>

	/* Timer0 Normal */
	TIMER0_Vid_Interrupt_Enable_Every(100); // 100 ms
     292:	84 e6       	ldi	r24, 0x64	; 100
     294:	90 e0       	ldi	r25, 0x00	; 0
     296:	0e 94 98 05 	call	0xb30	; 0xb30 <TIMER0_Vid_Interrupt_Enable_Every>
	TIMER0_Vid_Set_CallBack(ADC_Reading_Timer);
     29a:	8b e8       	ldi	r24, 0x8B	; 139
     29c:	90 e0       	ldi	r25, 0x00	; 0
     29e:	0e 94 d3 05 	call	0xba6	; 0xba6 <TIMER0_Vid_Set_CallBack>

	/*Timer 1 CTC*/
	TIMER1_Vid_CTC_Init();
     2a2:	0e 94 14 06 	call	0xc28	; 0xc28 <TIMER1_Vid_CTC_Init>
	TIMER1_Vid_CTC_InterruptEnable();
     2a6:	0e 94 21 06 	call	0xc42	; 0xc42 <TIMER1_Vid_CTC_InterruptEnable>
	Timer1_CTC_SetCallBack(TemperatureMonitoringTask);
     2aa:	82 ec       	ldi	r24, 0xC2	; 194
     2ac:	90 e0       	ldi	r25, 0x00	; 0
     2ae:	0e 94 25 06 	call	0xc4a	; 0xc4a <Timer1_CTC_SetCallBack>
     2b2:	08 95       	ret

000002b4 <Heater_Cooler_Control>:
}

void Heater_Cooler_Control()
{
	// Required Temperature is equal to room temperature, so no action needed
	if( ( Temp_Set<Temp_AVG+TEMP_MARGIN ) && (Temp_Set>Temp_AVG-TEMP_MARGIN)  )
     2b4:	20 91 63 00 	lds	r18, 0x0063	; 0x800063 <Temp_Set>
     2b8:	30 e0       	ldi	r19, 0x00	; 0
     2ba:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
     2be:	90 e0       	ldi	r25, 0x00	; 0
     2c0:	ac 01       	movw	r20, r24
     2c2:	4b 5f       	subi	r20, 0xFB	; 251
     2c4:	5f 4f       	sbci	r21, 0xFF	; 255
     2c6:	24 17       	cp	r18, r20
     2c8:	35 07       	cpc	r19, r21
     2ca:	5c f4       	brge	.+22     	; 0x2e2 <Heater_Cooler_Control+0x2e>
     2cc:	bc 01       	movw	r22, r24
     2ce:	65 50       	subi	r22, 0x05	; 5
     2d0:	71 09       	sbc	r23, r1
     2d2:	62 17       	cp	r22, r18
     2d4:	73 07       	cpc	r23, r19
     2d6:	2c f4       	brge	.+10     	; 0x2e2 <Heater_Cooler_Control+0x2e>
	{
		// Turn off Cooler and Turn Heater off
		HeatingElement_OFF();
     2d8:	0e 94 e9 01 	call	0x3d2	; 0x3d2 <HeatingElement_OFF>
		CoolingElement_OFF();
     2dc:	0e 94 f5 01 	call	0x3ea	; 0x3ea <CoolingElement_OFF>
     2e0:	08 95       	ret
		
	}
	// Required Temperature is higher than room temperature, so heat the room
	else if(Temp_Set >Temp_AVG - TEMP_MARGIN )
     2e2:	05 97       	sbiw	r24, 0x05	; 5
     2e4:	82 17       	cp	r24, r18
     2e6:	93 07       	cpc	r25, r19
     2e8:	2c f4       	brge	.+10     	; 0x2f4 <Heater_Cooler_Control+0x40>
	{
		// Turn on Heater and turn Cooler off
		HeatingElement_ON();
     2ea:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <HeatingElement_ON>
		CoolingElement_OFF();
     2ee:	0e 94 f5 01 	call	0x3ea	; 0x3ea <CoolingElement_OFF>
     2f2:	08 95       	ret
	}
// Required Temperature is lower than room temperature, so cool the room
	else if (Temp_Set < Temp_AVG + TEMP_MARGIN)
     2f4:	24 17       	cp	r18, r20
     2f6:	35 07       	cpc	r19, r21
     2f8:	24 f4       	brge	.+8      	; 0x302 <Heater_Cooler_Control+0x4e>
	{
		// Turn on Cooler and Turn Heater off
		HeatingElement_OFF();
     2fa:	0e 94 e9 01 	call	0x3d2	; 0x3d2 <HeatingElement_OFF>
		CoolingElement_ON();
     2fe:	0e 94 ef 01 	call	0x3de	; 0x3de <CoolingElement_ON>
     302:	08 95       	ret

00000304 <Temperature_Sensing>:

void Temperature_Sensing()
{
	static u8 counter2 = 0;
	static u16 Temp_Sum = 0;
	if (System_Mode == SYSTEM_ON)
     304:	80 91 83 00 	lds	r24, 0x0083	; 0x800083 <System_Mode>
     308:	81 30       	cpi	r24, 0x01	; 1
     30a:	09 f0       	breq	.+2      	; 0x30e <Temperature_Sensing+0xa>
     30c:	40 c0       	rjmp	.+128    	; 0x38e <Temperature_Sensing+0x8a>
	{
		counter2++;
     30e:	80 91 7c 00 	lds	r24, 0x007C	; 0x80007c <counter2.1871>
     312:	8f 5f       	subi	r24, 0xFF	; 255
     314:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <counter2.1871>
		 // Read current temperature from ADC
		Temp_Curr = ADC_u16_Read() * (float)500 / 1024;
     318:	0e 94 e4 02 	call	0x5c8	; 0x5c8 <ADC_u16_Read>
     31c:	bc 01       	movw	r22, r24
     31e:	80 e0       	ldi	r24, 0x00	; 0
     320:	90 e0       	ldi	r25, 0x00	; 0
     322:	0e 94 19 07 	call	0xe32	; 0xe32 <__floatunsisf>
     326:	20 e0       	ldi	r18, 0x00	; 0
     328:	30 e0       	ldi	r19, 0x00	; 0
     32a:	4a ef       	ldi	r20, 0xFA	; 250
     32c:	53 e4       	ldi	r21, 0x43	; 67
     32e:	0e 94 a7 07 	call	0xf4e	; 0xf4e <__mulsf3>
     332:	20 e0       	ldi	r18, 0x00	; 0
     334:	30 e0       	ldi	r19, 0x00	; 0
     336:	40 e8       	ldi	r20, 0x80	; 128
     338:	5a e3       	ldi	r21, 0x3A	; 58
     33a:	0e 94 a7 07 	call	0xf4e	; 0xf4e <__mulsf3>
     33e:	0e 94 ea 06 	call	0xdd4	; 0xdd4 <__fixunssfsi>
     342:	70 93 62 00 	sts	0x0062, r23	; 0x800062 <Temp_Curr+0x1>
     346:	60 93 61 00 	sts	0x0061, r22	; 0x800061 <Temp_Curr>
		Temp_Sum += Temp_Curr;
     34a:	20 91 7a 00 	lds	r18, 0x007A	; 0x80007a <__data_end>
     34e:	30 91 7b 00 	lds	r19, 0x007B	; 0x80007b <__data_end+0x1>
     352:	26 0f       	add	r18, r22
     354:	37 1f       	adc	r19, r23
     356:	30 93 7b 00 	sts	0x007B, r19	; 0x80007b <__data_end+0x1>
     35a:	20 93 7a 00 	sts	0x007A, r18	; 0x80007a <__data_end>
	// Average temperature over 10 readings
		if (counter2 == 10)
     35e:	80 91 7c 00 	lds	r24, 0x007C	; 0x80007c <counter2.1871>
     362:	8a 30       	cpi	r24, 0x0A	; 10
     364:	a1 f4       	brne	.+40     	; 0x38e <Temperature_Sensing+0x8a>
		{
			counter2 = 0;
     366:	10 92 7c 00 	sts	0x007C, r1	; 0x80007c <counter2.1871>
			Temp_AVG = Temp_Sum / 10;
     36a:	ad ec       	ldi	r26, 0xCD	; 205
     36c:	bc ec       	ldi	r27, 0xCC	; 204
     36e:	0e 94 14 08 	call	0x1028	; 0x1028 <__umulhisi3>
     372:	96 95       	lsr	r25
     374:	87 95       	ror	r24
     376:	96 95       	lsr	r25
     378:	87 95       	ror	r24
     37a:	96 95       	lsr	r25
     37c:	87 95       	ror	r24
     37e:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
			Temp_Sum = 0;
     382:	10 92 7b 00 	sts	0x007B, r1	; 0x80007b <__data_end+0x1>
     386:	10 92 7a 00 	sts	0x007A, r1	; 0x80007a <__data_end>
			// Control heating/cooling elements based on temperature
			Heater_Cooler_Control();
     38a:	0e 94 5a 01 	call	0x2b4	; 0x2b4 <Heater_Cooler_Control>
     38e:	08 95       	ret

00000390 <Heater_Cooler_Init>:
	DIO_Vid_Set_Pin_Dir(COOLINGELEMENT_PORT, COOLINGELEMENT_PIN, OUTPUT);
}
// Turn on the heating element LED
void Heating_ElementLed_ON()
{
	DIO_Vid_Set_Pin_Val(HEATINGELEMENTLED_PORT, HEATINGELEMENTLED_PIN, HIGH);
     390:	41 e0       	ldi	r20, 0x01	; 1
     392:	60 e0       	ldi	r22, 0x00	; 0
     394:	83 e0       	ldi	r24, 0x03	; 3
     396:	0e 94 23 03 	call	0x646	; 0x646 <DIO_Vid_Set_Pin_Dir>
     39a:	41 e0       	ldi	r20, 0x01	; 1
     39c:	61 e0       	ldi	r22, 0x01	; 1
     39e:	83 e0       	ldi	r24, 0x03	; 3
     3a0:	0e 94 23 03 	call	0x646	; 0x646 <DIO_Vid_Set_Pin_Dir>
     3a4:	41 e0       	ldi	r20, 0x01	; 1
     3a6:	64 e0       	ldi	r22, 0x04	; 4
     3a8:	83 e0       	ldi	r24, 0x03	; 3
     3aa:	0e 94 23 03 	call	0x646	; 0x646 <DIO_Vid_Set_Pin_Dir>
     3ae:	08 95       	ret

000003b0 <Heating_ElementLed_OFF>:
}
// Turn off the heating element LED
void Heating_ElementLed_OFF()
{
	DIO_Vid_Set_Pin_Val(HEATINGELEMENTLED_PORT, HEATINGELEMENTLED_PIN, LOW);
     3b0:	40 e0       	ldi	r20, 0x00	; 0
     3b2:	60 e0       	ldi	r22, 0x00	; 0
     3b4:	83 e0       	ldi	r24, 0x03	; 3
     3b6:	0e 94 94 03 	call	0x728	; 0x728 <DIO_Vid_Set_Pin_Val>
     3ba:	08 95       	ret

000003bc <HeatingElement_Led_TOGGLE>:
}
// Toggle the state of the heating element LED
void HeatingElement_Led_TOGGLE()
{
	DIO_Vid_Toggle_Pin_Val(HEATINGELEMENTLED_PORT, HEATINGELEMENTLED_PIN);
     3bc:	60 e0       	ldi	r22, 0x00	; 0
     3be:	83 e0       	ldi	r24, 0x03	; 3
     3c0:	0e 94 33 04 	call	0x866	; 0x866 <DIO_Vid_Toggle_Pin_Val>
     3c4:	08 95       	ret

000003c6 <HeatingElement_ON>:
}
// Turn on the heating element
void HeatingElement_ON()
{
	DIO_Vid_Set_Pin_Val(HEATINGELEMENT_PORT, HEATINGELEMENT_PIN, HIGH);
     3c6:	41 e0       	ldi	r20, 0x01	; 1
     3c8:	61 e0       	ldi	r22, 0x01	; 1
     3ca:	83 e0       	ldi	r24, 0x03	; 3
     3cc:	0e 94 94 03 	call	0x728	; 0x728 <DIO_Vid_Set_Pin_Val>
     3d0:	08 95       	ret

000003d2 <HeatingElement_OFF>:
}
// Turn off the heating element
void HeatingElement_OFF()
{
	DIO_Vid_Set_Pin_Val(HEATINGELEMENT_PORT, HEATINGELEMENT_PIN, LOW);
     3d2:	40 e0       	ldi	r20, 0x00	; 0
     3d4:	61 e0       	ldi	r22, 0x01	; 1
     3d6:	83 e0       	ldi	r24, 0x03	; 3
     3d8:	0e 94 94 03 	call	0x728	; 0x728 <DIO_Vid_Set_Pin_Val>
     3dc:	08 95       	ret

000003de <CoolingElement_ON>:
}
// Turn on the cooling element
void CoolingElement_ON()
{
	DIO_Vid_Set_Pin_Val(COOLINGELEMENT_PORT, COOLINGELEMENT_PIN, HIGH);
     3de:	41 e0       	ldi	r20, 0x01	; 1
     3e0:	64 e0       	ldi	r22, 0x04	; 4
     3e2:	83 e0       	ldi	r24, 0x03	; 3
     3e4:	0e 94 94 03 	call	0x728	; 0x728 <DIO_Vid_Set_Pin_Val>
     3e8:	08 95       	ret

000003ea <CoolingElement_OFF>:
}
// Turn off the cooling element
void CoolingElement_OFF()
{
	DIO_Vid_Set_Pin_Val(COOLINGELEMENT_PORT, COOLINGELEMENT_PIN, LOW);
     3ea:	40 e0       	ldi	r20, 0x00	; 0
     3ec:	64 e0       	ldi	r22, 0x04	; 4
     3ee:	83 e0       	ldi	r24, 0x03	; 3
     3f0:	0e 94 94 03 	call	0x728	; 0x728 <DIO_Vid_Set_Pin_Val>
     3f4:	08 95       	ret

000003f6 <SSD_Vid_Init>:
 * Return value : void
 *****************************************************************************/
void SSD_Vid_Init()
{
	// Set the direction of the seven-segment display pins
	DIO_Vid_Set_Port_Dir(PORTC, PORT_OUTPUT);
     3f6:	6f ef       	ldi	r22, 0xFF	; 255
     3f8:	82 e0       	ldi	r24, 0x02	; 2
     3fa:	0e 94 67 04 	call	0x8ce	; 0x8ce <DIO_Vid_Set_Port_Dir>
	DIO_Vid_Set_Pin_Dir(PORTA, PIN1, OUTPUT);
     3fe:	41 e0       	ldi	r20, 0x01	; 1
     400:	61 e0       	ldi	r22, 0x01	; 1
     402:	80 e0       	ldi	r24, 0x00	; 0
     404:	0e 94 23 03 	call	0x646	; 0x646 <DIO_Vid_Set_Pin_Dir>
	DIO_Vid_Set_Pin_Dir(PORTA, PIN2, OUTPUT);
     408:	41 e0       	ldi	r20, 0x01	; 1
     40a:	62 e0       	ldi	r22, 0x02	; 2
     40c:	80 e0       	ldi	r24, 0x00	; 0
     40e:	0e 94 23 03 	call	0x646	; 0x646 <DIO_Vid_Set_Pin_Dir>
	DIO_Vid_Set_Pin_Dir(PORTA, PIN3, OUTPUT);
     412:	41 e0       	ldi	r20, 0x01	; 1
     414:	63 e0       	ldi	r22, 0x03	; 3
     416:	80 e0       	ldi	r24, 0x00	; 0
     418:	0e 94 23 03 	call	0x646	; 0x646 <DIO_Vid_Set_Pin_Dir>
	DIO_Vid_Set_Pin_Dir(PORTB, PIN0, OUTPUT);
     41c:	41 e0       	ldi	r20, 0x01	; 1
     41e:	60 e0       	ldi	r22, 0x00	; 0
     420:	81 e0       	ldi	r24, 0x01	; 1
     422:	0e 94 23 03 	call	0x646	; 0x646 <DIO_Vid_Set_Pin_Dir>
	DIO_Vid_Set_Pin_Dir(PORTB, PIN5, OUTPUT);
     426:	41 e0       	ldi	r20, 0x01	; 1
     428:	65 e0       	ldi	r22, 0x05	; 5
     42a:	81 e0       	ldi	r24, 0x01	; 1
     42c:	0e 94 23 03 	call	0x646	; 0x646 <DIO_Vid_Set_Pin_Dir>
	DIO_Vid_Set_Pin_Dir(PORTB, PIN6, OUTPUT);
     430:	41 e0       	ldi	r20, 0x01	; 1
     432:	66 e0       	ldi	r22, 0x06	; 6
     434:	81 e0       	ldi	r24, 0x01	; 1
     436:	0e 94 23 03 	call	0x646	; 0x646 <DIO_Vid_Set_Pin_Dir>
	DIO_Vid_Set_Pin_Dir(PORTB, PIN7, OUTPUT);
     43a:	41 e0       	ldi	r20, 0x01	; 1
     43c:	67 e0       	ldi	r22, 0x07	; 7
     43e:	81 e0       	ldi	r24, 0x01	; 1
     440:	0e 94 23 03 	call	0x646	; 0x646 <DIO_Vid_Set_Pin_Dir>
	// Set the direction of the control pin for the seven-segment display
	DIO_Vid_Set_Pin_Dir(PORTC, PIN7, OUTPUT);
     444:	41 e0       	ldi	r20, 0x01	; 1
     446:	67 e0       	ldi	r22, 0x07	; 7
     448:	82 e0       	ldi	r24, 0x02	; 2
     44a:	0e 94 23 03 	call	0x646	; 0x646 <DIO_Vid_Set_Pin_Dir>
     44e:	08 95       	ret

00000450 <SSD_DIS>:
 * Return value : void
 *****************************************************************************/
void SSD_DIS()
{
	 // Disable the seven-segment display by setting the control pin to HIGH
	DIO_Vid_Set_Pin_Val(PORTC, PIN7, HIGH);
     450:	41 e0       	ldi	r20, 0x01	; 1
     452:	67 e0       	ldi	r22, 0x07	; 7
     454:	82 e0       	ldi	r24, 0x02	; 2
     456:	0e 94 94 03 	call	0x728	; 0x728 <DIO_Vid_Set_Pin_Val>
     45a:	08 95       	ret

0000045c <SSD_EN>:
}

void SSD_EN()
{
	// Enable the seven-segment display by setting the control pin to LOW
	DIO_Vid_Set_Pin_Val(PORTC, PIN7, LOW);
     45c:	40 e0       	ldi	r20, 0x00	; 0
     45e:	67 e0       	ldi	r22, 0x07	; 7
     460:	82 e0       	ldi	r24, 0x02	; 2
     462:	0e 94 94 03 	call	0x728	; 0x728 <DIO_Vid_Set_Pin_Val>
     466:	08 95       	ret

00000468 <SSD_TOGGLE>:
}
void SSD_TOGGLE()
{
	// Toggle the state of the control pin for the seven-segment display
	DIO_Vid_Toggle_Pin_Val(PORTC, PIN7);
     468:	67 e0       	ldi	r22, 0x07	; 7
     46a:	82 e0       	ldi	r24, 0x02	; 2
     46c:	0e 94 33 04 	call	0x866	; 0x866 <DIO_Vid_Toggle_Pin_Val>
     470:	08 95       	ret

00000472 <SEVEN_SEGMENT_Write_Val>:
 * Purpose      : Write Value On Seven Segment
 * Parameters   : void
 * Return value : void
 *****************************************************************************/
void SEVEN_SEGMENT_Write_Val(u8 number)
{
     472:	0f 93       	push	r16
     474:	1f 93       	push	r17
     476:	cf 93       	push	r28
     478:	df 93       	push	r29
     47a:	cd b7       	in	r28, 0x3d	; 61
     47c:	de b7       	in	r29, 0x3e	; 62
     47e:	2a 97       	sbiw	r28, 0x0a	; 10
     480:	0f b6       	in	r0, 0x3f	; 63
     482:	f8 94       	cli
     484:	de bf       	out	0x3e, r29	; 62
     486:	0f be       	out	0x3f, r0	; 63
     488:	cd bf       	out	0x3d, r28	; 61
// Array to store the segment patterns for each digit
	u8 num[10] = {0x3F, 0x6, 0x5B, 0x4F, 0x66, 0x6D, 0x7D, 0x7, 0xFF, 0x67};
     48a:	9a e0       	ldi	r25, 0x0A	; 10
     48c:	e0 e7       	ldi	r30, 0x70	; 112
     48e:	f0 e0       	ldi	r31, 0x00	; 0
     490:	de 01       	movw	r26, r28
     492:	11 96       	adiw	r26, 0x01	; 1
     494:	01 90       	ld	r0, Z+
     496:	0d 92       	st	X+, r0
     498:	9a 95       	dec	r25
     49a:	e1 f7       	brne	.-8      	; 0x494 <SEVEN_SEGMENT_Write_Val+0x22>
// Extract the ones and tens digits from the number
	u8 SSD1 = num[number % 10];
     49c:	9d ec       	ldi	r25, 0xCD	; 205
     49e:	89 9f       	mul	r24, r25
     4a0:	91 2d       	mov	r25, r1
     4a2:	11 24       	eor	r1, r1
     4a4:	96 95       	lsr	r25
     4a6:	96 95       	lsr	r25
     4a8:	96 95       	lsr	r25
     4aa:	39 2f       	mov	r19, r25
     4ac:	33 0f       	add	r19, r19
     4ae:	23 2f       	mov	r18, r19
     4b0:	22 0f       	add	r18, r18
     4b2:	22 0f       	add	r18, r18
     4b4:	23 0f       	add	r18, r19
     4b6:	82 1b       	sub	r24, r18
     4b8:	e1 e0       	ldi	r30, 0x01	; 1
     4ba:	f0 e0       	ldi	r31, 0x00	; 0
     4bc:	ec 0f       	add	r30, r28
     4be:	fd 1f       	adc	r31, r29
     4c0:	e8 0f       	add	r30, r24
     4c2:	f1 1d       	adc	r31, r1
     4c4:	00 81       	ld	r16, Z
	u8 SSD2 = num[number / 10];
     4c6:	e1 e0       	ldi	r30, 0x01	; 1
     4c8:	f0 e0       	ldi	r31, 0x00	; 0
     4ca:	ec 0f       	add	r30, r28
     4cc:	fd 1f       	adc	r31, r29
     4ce:	e9 0f       	add	r30, r25
     4d0:	f1 1d       	adc	r31, r1
     4d2:	10 81       	ld	r17, Z

// Set the segment pins for the ones digit
	DIO_Vid_Set_Pin_Val(PORTC, PIN0, GET_BIT(SSD1, 0));
     4d4:	40 2f       	mov	r20, r16
     4d6:	41 70       	andi	r20, 0x01	; 1
     4d8:	60 e0       	ldi	r22, 0x00	; 0
     4da:	82 e0       	ldi	r24, 0x02	; 2
     4dc:	0e 94 94 03 	call	0x728	; 0x728 <DIO_Vid_Set_Pin_Val>
	DIO_Vid_Set_Pin_Val(PORTC, PIN1, GET_BIT(SSD1, 1));
     4e0:	01 fb       	bst	r16, 1
     4e2:	44 27       	eor	r20, r20
     4e4:	40 f9       	bld	r20, 0
     4e6:	61 e0       	ldi	r22, 0x01	; 1
     4e8:	82 e0       	ldi	r24, 0x02	; 2
     4ea:	0e 94 94 03 	call	0x728	; 0x728 <DIO_Vid_Set_Pin_Val>
	DIO_Vid_Set_Pin_Val(PORTC, PIN2, GET_BIT(SSD1, 2));
     4ee:	02 fb       	bst	r16, 2
     4f0:	44 27       	eor	r20, r20
     4f2:	40 f9       	bld	r20, 0
     4f4:	62 e0       	ldi	r22, 0x02	; 2
     4f6:	82 e0       	ldi	r24, 0x02	; 2
     4f8:	0e 94 94 03 	call	0x728	; 0x728 <DIO_Vid_Set_Pin_Val>
	DIO_Vid_Set_Pin_Val(PORTC, PIN3, GET_BIT(SSD1, 3));
     4fc:	03 fb       	bst	r16, 3
     4fe:	44 27       	eor	r20, r20
     500:	40 f9       	bld	r20, 0
     502:	63 e0       	ldi	r22, 0x03	; 3
     504:	82 e0       	ldi	r24, 0x02	; 2
     506:	0e 94 94 03 	call	0x728	; 0x728 <DIO_Vid_Set_Pin_Val>
	DIO_Vid_Set_Pin_Val(PORTC, PIN4, GET_BIT(SSD1, 4));
     50a:	04 fb       	bst	r16, 4
     50c:	44 27       	eor	r20, r20
     50e:	40 f9       	bld	r20, 0
     510:	64 e0       	ldi	r22, 0x04	; 4
     512:	82 e0       	ldi	r24, 0x02	; 2
     514:	0e 94 94 03 	call	0x728	; 0x728 <DIO_Vid_Set_Pin_Val>
	DIO_Vid_Set_Pin_Val(PORTC, PIN5, GET_BIT(SSD1, 5));
     518:	05 fb       	bst	r16, 5
     51a:	44 27       	eor	r20, r20
     51c:	40 f9       	bld	r20, 0
     51e:	65 e0       	ldi	r22, 0x05	; 5
     520:	82 e0       	ldi	r24, 0x02	; 2
     522:	0e 94 94 03 	call	0x728	; 0x728 <DIO_Vid_Set_Pin_Val>
	DIO_Vid_Set_Pin_Val(PORTC, PIN6, GET_BIT(SSD1, 6));
     526:	06 fb       	bst	r16, 6
     528:	44 27       	eor	r20, r20
     52a:	40 f9       	bld	r20, 0
     52c:	66 e0       	ldi	r22, 0x06	; 6
     52e:	82 e0       	ldi	r24, 0x02	; 2
     530:	0e 94 94 03 	call	0x728	; 0x728 <DIO_Vid_Set_Pin_Val>
	
// Set the segment pins for the tens digit
	DIO_Vid_Set_Pin_Val(PORTA, PIN1, GET_BIT(SSD2, 0));
     534:	41 2f       	mov	r20, r17
     536:	41 70       	andi	r20, 0x01	; 1
     538:	61 e0       	ldi	r22, 0x01	; 1
     53a:	80 e0       	ldi	r24, 0x00	; 0
     53c:	0e 94 94 03 	call	0x728	; 0x728 <DIO_Vid_Set_Pin_Val>
	DIO_Vid_Set_Pin_Val(PORTA, PIN2, GET_BIT(SSD2, 1));
     540:	11 fb       	bst	r17, 1
     542:	44 27       	eor	r20, r20
     544:	40 f9       	bld	r20, 0
     546:	62 e0       	ldi	r22, 0x02	; 2
     548:	80 e0       	ldi	r24, 0x00	; 0
     54a:	0e 94 94 03 	call	0x728	; 0x728 <DIO_Vid_Set_Pin_Val>
	DIO_Vid_Set_Pin_Val(PORTA, PIN3, GET_BIT(SSD2, 2));
     54e:	12 fb       	bst	r17, 2
     550:	44 27       	eor	r20, r20
     552:	40 f9       	bld	r20, 0
     554:	63 e0       	ldi	r22, 0x03	; 3
     556:	80 e0       	ldi	r24, 0x00	; 0
     558:	0e 94 94 03 	call	0x728	; 0x728 <DIO_Vid_Set_Pin_Val>
	DIO_Vid_Set_Pin_Val(PORTB, PIN0, GET_BIT(SSD2, 3));
     55c:	13 fb       	bst	r17, 3
     55e:	44 27       	eor	r20, r20
     560:	40 f9       	bld	r20, 0
     562:	60 e0       	ldi	r22, 0x00	; 0
     564:	81 e0       	ldi	r24, 0x01	; 1
     566:	0e 94 94 03 	call	0x728	; 0x728 <DIO_Vid_Set_Pin_Val>
	DIO_Vid_Set_Pin_Val(PORTB, PIN5, GET_BIT(SSD2, 4));
     56a:	14 fb       	bst	r17, 4
     56c:	44 27       	eor	r20, r20
     56e:	40 f9       	bld	r20, 0
     570:	65 e0       	ldi	r22, 0x05	; 5
     572:	81 e0       	ldi	r24, 0x01	; 1
     574:	0e 94 94 03 	call	0x728	; 0x728 <DIO_Vid_Set_Pin_Val>
	DIO_Vid_Set_Pin_Val(PORTB, PIN6, GET_BIT(SSD2, 5));
     578:	15 fb       	bst	r17, 5
     57a:	44 27       	eor	r20, r20
     57c:	40 f9       	bld	r20, 0
     57e:	66 e0       	ldi	r22, 0x06	; 6
     580:	81 e0       	ldi	r24, 0x01	; 1
     582:	0e 94 94 03 	call	0x728	; 0x728 <DIO_Vid_Set_Pin_Val>
	DIO_Vid_Set_Pin_Val(PORTB, PIN7, GET_BIT(SSD2, 6));
     586:	16 fb       	bst	r17, 6
     588:	44 27       	eor	r20, r20
     58a:	40 f9       	bld	r20, 0
     58c:	67 e0       	ldi	r22, 0x07	; 7
     58e:	81 e0       	ldi	r24, 0x01	; 1
     590:	0e 94 94 03 	call	0x728	; 0x728 <DIO_Vid_Set_Pin_Val>
     594:	2a 96       	adiw	r28, 0x0a	; 10
     596:	0f b6       	in	r0, 0x3f	; 63
     598:	f8 94       	cli
     59a:	de bf       	out	0x3e, r29	; 62
     59c:	0f be       	out	0x3f, r0	; 63
     59e:	cd bf       	out	0x3d, r28	; 61
     5a0:	df 91       	pop	r29
     5a2:	cf 91       	pop	r28
     5a4:	1f 91       	pop	r17
     5a6:	0f 91       	pop	r16
     5a8:	08 95       	ret

000005aa <main>:
#define F_CPU 16000000UL
#include "util/delay.h"

int main(void)
{
	EEPROM_Init();
     5aa:	0e 94 04 01 	call	0x208	; 0x208 <EEPROM_Init>
	System_Init();
     5ae:	0e 94 11 01 	call	0x222	; 0x222 <System_Init>
     5b2:	ff cf       	rjmp	.-2      	; 0x5b2 <main+0x8>

000005b4 <ADC_Vid_Init>:
     5b4:	86 b1       	in	r24, 0x06	; 6
     5b6:	88 7f       	andi	r24, 0xF8	; 248
     5b8:	86 b9       	out	0x06, r24	; 6
     5ba:	86 b1       	in	r24, 0x06	; 6
     5bc:	87 60       	ori	r24, 0x07	; 7
     5be:	86 b9       	out	0x06, r24	; 6
     5c0:	86 b1       	in	r24, 0x06	; 6
     5c2:	80 68       	ori	r24, 0x80	; 128
     5c4:	86 b9       	out	0x06, r24	; 6
     5c6:	08 95       	ret

000005c8 <ADC_u16_Read>:
     5c8:	84 b1       	in	r24, 0x04	; 4
     5ca:	95 b1       	in	r25, 0x05	; 5
     5cc:	08 95       	ret

000005ce <ADC_Vid_Start_Conversion>:
     5ce:	97 b1       	in	r25, 0x07	; 7
     5d0:	90 7e       	andi	r25, 0xE0	; 224
     5d2:	97 b9       	out	0x07, r25	; 7
     5d4:	97 b1       	in	r25, 0x07	; 7
     5d6:	89 2b       	or	r24, r25
     5d8:	87 b9       	out	0x07, r24	; 7
     5da:	86 b1       	in	r24, 0x06	; 6
     5dc:	80 64       	ori	r24, 0x40	; 64
     5de:	86 b9       	out	0x06, r24	; 6
     5e0:	08 95       	ret

000005e2 <ADC_Vid_Interrupt_Enable>:
     5e2:	0e 94 87 05 	call	0xb0e	; 0xb0e <GIE_Vid_Enable>
     5e6:	86 b1       	in	r24, 0x06	; 6
     5e8:	88 60       	ori	r24, 0x08	; 8
     5ea:	86 b9       	out	0x06, r24	; 6
     5ec:	08 95       	ret

000005ee <__vector_16>:
     5ee:	1f 92       	push	r1
     5f0:	0f 92       	push	r0
     5f2:	0f b6       	in	r0, 0x3f	; 63
     5f4:	0f 92       	push	r0
     5f6:	11 24       	eor	r1, r1
     5f8:	2f 93       	push	r18
     5fa:	3f 93       	push	r19
     5fc:	4f 93       	push	r20
     5fe:	5f 93       	push	r21
     600:	6f 93       	push	r22
     602:	7f 93       	push	r23
     604:	8f 93       	push	r24
     606:	9f 93       	push	r25
     608:	af 93       	push	r26
     60a:	bf 93       	push	r27
     60c:	ef 93       	push	r30
     60e:	ff 93       	push	r31
     610:	e0 91 88 00 	lds	r30, 0x0088	; 0x800088 <ptr1>
     614:	f0 91 89 00 	lds	r31, 0x0089	; 0x800089 <ptr1+0x1>
     618:	09 95       	icall
     61a:	ff 91       	pop	r31
     61c:	ef 91       	pop	r30
     61e:	bf 91       	pop	r27
     620:	af 91       	pop	r26
     622:	9f 91       	pop	r25
     624:	8f 91       	pop	r24
     626:	7f 91       	pop	r23
     628:	6f 91       	pop	r22
     62a:	5f 91       	pop	r21
     62c:	4f 91       	pop	r20
     62e:	3f 91       	pop	r19
     630:	2f 91       	pop	r18
     632:	0f 90       	pop	r0
     634:	0f be       	out	0x3f, r0	; 63
     636:	0f 90       	pop	r0
     638:	1f 90       	pop	r1
     63a:	18 95       	reti

0000063c <ADC_Set_Call_Back>:
     63c:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <ptr1+0x1>
     640:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <ptr1>
     644:	08 95       	ret

00000646 <DIO_Vid_Set_Pin_Dir>:
     646:	42 30       	cpi	r20, 0x02	; 2
     648:	08 f0       	brcs	.+2      	; 0x64c <DIO_Vid_Set_Pin_Dir+0x6>
     64a:	6d c0       	rjmp	.+218    	; 0x726 <DIO_Vid_Set_Pin_Dir+0xe0>
     64c:	41 30       	cpi	r20, 0x01	; 1
     64e:	a1 f5       	brne	.+104    	; 0x6b8 <DIO_Vid_Set_Pin_Dir+0x72>
     650:	81 30       	cpi	r24, 0x01	; 1
     652:	89 f0       	breq	.+34     	; 0x676 <DIO_Vid_Set_Pin_Dir+0x30>
     654:	28 f0       	brcs	.+10     	; 0x660 <DIO_Vid_Set_Pin_Dir+0x1a>
     656:	82 30       	cpi	r24, 0x02	; 2
     658:	c9 f0       	breq	.+50     	; 0x68c <DIO_Vid_Set_Pin_Dir+0x46>
     65a:	83 30       	cpi	r24, 0x03	; 3
     65c:	11 f1       	breq	.+68     	; 0x6a2 <DIO_Vid_Set_Pin_Dir+0x5c>
     65e:	08 95       	ret
     660:	2a b3       	in	r18, 0x1a	; 26
     662:	81 e0       	ldi	r24, 0x01	; 1
     664:	90 e0       	ldi	r25, 0x00	; 0
     666:	02 c0       	rjmp	.+4      	; 0x66c <DIO_Vid_Set_Pin_Dir+0x26>
     668:	88 0f       	add	r24, r24
     66a:	99 1f       	adc	r25, r25
     66c:	6a 95       	dec	r22
     66e:	e2 f7       	brpl	.-8      	; 0x668 <DIO_Vid_Set_Pin_Dir+0x22>
     670:	82 2b       	or	r24, r18
     672:	8a bb       	out	0x1a, r24	; 26
     674:	08 95       	ret
     676:	27 b3       	in	r18, 0x17	; 23
     678:	81 e0       	ldi	r24, 0x01	; 1
     67a:	90 e0       	ldi	r25, 0x00	; 0
     67c:	02 c0       	rjmp	.+4      	; 0x682 <DIO_Vid_Set_Pin_Dir+0x3c>
     67e:	88 0f       	add	r24, r24
     680:	99 1f       	adc	r25, r25
     682:	6a 95       	dec	r22
     684:	e2 f7       	brpl	.-8      	; 0x67e <DIO_Vid_Set_Pin_Dir+0x38>
     686:	82 2b       	or	r24, r18
     688:	87 bb       	out	0x17, r24	; 23
     68a:	08 95       	ret
     68c:	24 b3       	in	r18, 0x14	; 20
     68e:	81 e0       	ldi	r24, 0x01	; 1
     690:	90 e0       	ldi	r25, 0x00	; 0
     692:	02 c0       	rjmp	.+4      	; 0x698 <DIO_Vid_Set_Pin_Dir+0x52>
     694:	88 0f       	add	r24, r24
     696:	99 1f       	adc	r25, r25
     698:	6a 95       	dec	r22
     69a:	e2 f7       	brpl	.-8      	; 0x694 <DIO_Vid_Set_Pin_Dir+0x4e>
     69c:	82 2b       	or	r24, r18
     69e:	84 bb       	out	0x14, r24	; 20
     6a0:	08 95       	ret
     6a2:	21 b3       	in	r18, 0x11	; 17
     6a4:	81 e0       	ldi	r24, 0x01	; 1
     6a6:	90 e0       	ldi	r25, 0x00	; 0
     6a8:	02 c0       	rjmp	.+4      	; 0x6ae <DIO_Vid_Set_Pin_Dir+0x68>
     6aa:	88 0f       	add	r24, r24
     6ac:	99 1f       	adc	r25, r25
     6ae:	6a 95       	dec	r22
     6b0:	e2 f7       	brpl	.-8      	; 0x6aa <DIO_Vid_Set_Pin_Dir+0x64>
     6b2:	82 2b       	or	r24, r18
     6b4:	81 bb       	out	0x11, r24	; 17
     6b6:	08 95       	ret
     6b8:	81 30       	cpi	r24, 0x01	; 1
     6ba:	91 f0       	breq	.+36     	; 0x6e0 <DIO_Vid_Set_Pin_Dir+0x9a>
     6bc:	28 f0       	brcs	.+10     	; 0x6c8 <DIO_Vid_Set_Pin_Dir+0x82>
     6be:	82 30       	cpi	r24, 0x02	; 2
     6c0:	d9 f0       	breq	.+54     	; 0x6f8 <DIO_Vid_Set_Pin_Dir+0xb2>
     6c2:	83 30       	cpi	r24, 0x03	; 3
     6c4:	29 f1       	breq	.+74     	; 0x710 <DIO_Vid_Set_Pin_Dir+0xca>
     6c6:	08 95       	ret
     6c8:	2a b3       	in	r18, 0x1a	; 26
     6ca:	81 e0       	ldi	r24, 0x01	; 1
     6cc:	90 e0       	ldi	r25, 0x00	; 0
     6ce:	02 c0       	rjmp	.+4      	; 0x6d4 <DIO_Vid_Set_Pin_Dir+0x8e>
     6d0:	88 0f       	add	r24, r24
     6d2:	99 1f       	adc	r25, r25
     6d4:	6a 95       	dec	r22
     6d6:	e2 f7       	brpl	.-8      	; 0x6d0 <DIO_Vid_Set_Pin_Dir+0x8a>
     6d8:	80 95       	com	r24
     6da:	82 23       	and	r24, r18
     6dc:	8a bb       	out	0x1a, r24	; 26
     6de:	08 95       	ret
     6e0:	27 b3       	in	r18, 0x17	; 23
     6e2:	81 e0       	ldi	r24, 0x01	; 1
     6e4:	90 e0       	ldi	r25, 0x00	; 0
     6e6:	02 c0       	rjmp	.+4      	; 0x6ec <DIO_Vid_Set_Pin_Dir+0xa6>
     6e8:	88 0f       	add	r24, r24
     6ea:	99 1f       	adc	r25, r25
     6ec:	6a 95       	dec	r22
     6ee:	e2 f7       	brpl	.-8      	; 0x6e8 <DIO_Vid_Set_Pin_Dir+0xa2>
     6f0:	80 95       	com	r24
     6f2:	82 23       	and	r24, r18
     6f4:	87 bb       	out	0x17, r24	; 23
     6f6:	08 95       	ret
     6f8:	24 b3       	in	r18, 0x14	; 20
     6fa:	81 e0       	ldi	r24, 0x01	; 1
     6fc:	90 e0       	ldi	r25, 0x00	; 0
     6fe:	02 c0       	rjmp	.+4      	; 0x704 <DIO_Vid_Set_Pin_Dir+0xbe>
     700:	88 0f       	add	r24, r24
     702:	99 1f       	adc	r25, r25
     704:	6a 95       	dec	r22
     706:	e2 f7       	brpl	.-8      	; 0x700 <DIO_Vid_Set_Pin_Dir+0xba>
     708:	80 95       	com	r24
     70a:	82 23       	and	r24, r18
     70c:	84 bb       	out	0x14, r24	; 20
     70e:	08 95       	ret
     710:	21 b3       	in	r18, 0x11	; 17
     712:	81 e0       	ldi	r24, 0x01	; 1
     714:	90 e0       	ldi	r25, 0x00	; 0
     716:	02 c0       	rjmp	.+4      	; 0x71c <DIO_Vid_Set_Pin_Dir+0xd6>
     718:	88 0f       	add	r24, r24
     71a:	99 1f       	adc	r25, r25
     71c:	6a 95       	dec	r22
     71e:	e2 f7       	brpl	.-8      	; 0x718 <DIO_Vid_Set_Pin_Dir+0xd2>
     720:	80 95       	com	r24
     722:	82 23       	and	r24, r18
     724:	81 bb       	out	0x11, r24	; 17
     726:	08 95       	ret

00000728 <DIO_Vid_Set_Pin_Val>:
     728:	42 30       	cpi	r20, 0x02	; 2
     72a:	08 f0       	brcs	.+2      	; 0x72e <DIO_Vid_Set_Pin_Val+0x6>
     72c:	6d c0       	rjmp	.+218    	; 0x808 <__DATA_REGION_LENGTH__+0x8>
     72e:	41 30       	cpi	r20, 0x01	; 1
     730:	a1 f5       	brne	.+104    	; 0x79a <DIO_Vid_Set_Pin_Val+0x72>
     732:	81 30       	cpi	r24, 0x01	; 1
     734:	89 f0       	breq	.+34     	; 0x758 <DIO_Vid_Set_Pin_Val+0x30>
     736:	28 f0       	brcs	.+10     	; 0x742 <DIO_Vid_Set_Pin_Val+0x1a>
     738:	82 30       	cpi	r24, 0x02	; 2
     73a:	c9 f0       	breq	.+50     	; 0x76e <DIO_Vid_Set_Pin_Val+0x46>
     73c:	83 30       	cpi	r24, 0x03	; 3
     73e:	11 f1       	breq	.+68     	; 0x784 <DIO_Vid_Set_Pin_Val+0x5c>
     740:	08 95       	ret
     742:	2b b3       	in	r18, 0x1b	; 27
     744:	81 e0       	ldi	r24, 0x01	; 1
     746:	90 e0       	ldi	r25, 0x00	; 0
     748:	02 c0       	rjmp	.+4      	; 0x74e <DIO_Vid_Set_Pin_Val+0x26>
     74a:	88 0f       	add	r24, r24
     74c:	99 1f       	adc	r25, r25
     74e:	6a 95       	dec	r22
     750:	e2 f7       	brpl	.-8      	; 0x74a <DIO_Vid_Set_Pin_Val+0x22>
     752:	82 2b       	or	r24, r18
     754:	8b bb       	out	0x1b, r24	; 27
     756:	08 95       	ret
     758:	28 b3       	in	r18, 0x18	; 24
     75a:	81 e0       	ldi	r24, 0x01	; 1
     75c:	90 e0       	ldi	r25, 0x00	; 0
     75e:	02 c0       	rjmp	.+4      	; 0x764 <DIO_Vid_Set_Pin_Val+0x3c>
     760:	88 0f       	add	r24, r24
     762:	99 1f       	adc	r25, r25
     764:	6a 95       	dec	r22
     766:	e2 f7       	brpl	.-8      	; 0x760 <DIO_Vid_Set_Pin_Val+0x38>
     768:	82 2b       	or	r24, r18
     76a:	88 bb       	out	0x18, r24	; 24
     76c:	08 95       	ret
     76e:	25 b3       	in	r18, 0x15	; 21
     770:	81 e0       	ldi	r24, 0x01	; 1
     772:	90 e0       	ldi	r25, 0x00	; 0
     774:	02 c0       	rjmp	.+4      	; 0x77a <DIO_Vid_Set_Pin_Val+0x52>
     776:	88 0f       	add	r24, r24
     778:	99 1f       	adc	r25, r25
     77a:	6a 95       	dec	r22
     77c:	e2 f7       	brpl	.-8      	; 0x776 <DIO_Vid_Set_Pin_Val+0x4e>
     77e:	82 2b       	or	r24, r18
     780:	85 bb       	out	0x15, r24	; 21
     782:	08 95       	ret
     784:	22 b3       	in	r18, 0x12	; 18
     786:	81 e0       	ldi	r24, 0x01	; 1
     788:	90 e0       	ldi	r25, 0x00	; 0
     78a:	02 c0       	rjmp	.+4      	; 0x790 <DIO_Vid_Set_Pin_Val+0x68>
     78c:	88 0f       	add	r24, r24
     78e:	99 1f       	adc	r25, r25
     790:	6a 95       	dec	r22
     792:	e2 f7       	brpl	.-8      	; 0x78c <DIO_Vid_Set_Pin_Val+0x64>
     794:	82 2b       	or	r24, r18
     796:	82 bb       	out	0x12, r24	; 18
     798:	08 95       	ret
     79a:	81 30       	cpi	r24, 0x01	; 1
     79c:	91 f0       	breq	.+36     	; 0x7c2 <DIO_Vid_Set_Pin_Val+0x9a>
     79e:	28 f0       	brcs	.+10     	; 0x7aa <DIO_Vid_Set_Pin_Val+0x82>
     7a0:	82 30       	cpi	r24, 0x02	; 2
     7a2:	d9 f0       	breq	.+54     	; 0x7da <DIO_Vid_Set_Pin_Val+0xb2>
     7a4:	83 30       	cpi	r24, 0x03	; 3
     7a6:	29 f1       	breq	.+74     	; 0x7f2 <DIO_Vid_Set_Pin_Val+0xca>
     7a8:	08 95       	ret
     7aa:	2b b3       	in	r18, 0x1b	; 27
     7ac:	81 e0       	ldi	r24, 0x01	; 1
     7ae:	90 e0       	ldi	r25, 0x00	; 0
     7b0:	02 c0       	rjmp	.+4      	; 0x7b6 <DIO_Vid_Set_Pin_Val+0x8e>
     7b2:	88 0f       	add	r24, r24
     7b4:	99 1f       	adc	r25, r25
     7b6:	6a 95       	dec	r22
     7b8:	e2 f7       	brpl	.-8      	; 0x7b2 <DIO_Vid_Set_Pin_Val+0x8a>
     7ba:	80 95       	com	r24
     7bc:	82 23       	and	r24, r18
     7be:	8b bb       	out	0x1b, r24	; 27
     7c0:	08 95       	ret
     7c2:	28 b3       	in	r18, 0x18	; 24
     7c4:	81 e0       	ldi	r24, 0x01	; 1
     7c6:	90 e0       	ldi	r25, 0x00	; 0
     7c8:	02 c0       	rjmp	.+4      	; 0x7ce <DIO_Vid_Set_Pin_Val+0xa6>
     7ca:	88 0f       	add	r24, r24
     7cc:	99 1f       	adc	r25, r25
     7ce:	6a 95       	dec	r22
     7d0:	e2 f7       	brpl	.-8      	; 0x7ca <DIO_Vid_Set_Pin_Val+0xa2>
     7d2:	80 95       	com	r24
     7d4:	82 23       	and	r24, r18
     7d6:	88 bb       	out	0x18, r24	; 24
     7d8:	08 95       	ret
     7da:	25 b3       	in	r18, 0x15	; 21
     7dc:	81 e0       	ldi	r24, 0x01	; 1
     7de:	90 e0       	ldi	r25, 0x00	; 0
     7e0:	02 c0       	rjmp	.+4      	; 0x7e6 <DIO_Vid_Set_Pin_Val+0xbe>
     7e2:	88 0f       	add	r24, r24
     7e4:	99 1f       	adc	r25, r25
     7e6:	6a 95       	dec	r22
     7e8:	e2 f7       	brpl	.-8      	; 0x7e2 <DIO_Vid_Set_Pin_Val+0xba>
     7ea:	80 95       	com	r24
     7ec:	82 23       	and	r24, r18
     7ee:	85 bb       	out	0x15, r24	; 21
     7f0:	08 95       	ret
     7f2:	22 b3       	in	r18, 0x12	; 18
     7f4:	81 e0       	ldi	r24, 0x01	; 1
     7f6:	90 e0       	ldi	r25, 0x00	; 0
     7f8:	02 c0       	rjmp	.+4      	; 0x7fe <DIO_Vid_Set_Pin_Val+0xd6>
     7fa:	88 0f       	add	r24, r24
     7fc:	99 1f       	adc	r25, r25
     7fe:	6a 95       	dec	r22
     800:	e2 f7       	brpl	.-8      	; 0x7fa <DIO_Vid_Set_Pin_Val+0xd2>
     802:	80 95       	com	r24
     804:	82 23       	and	r24, r18
     806:	82 bb       	out	0x12, r24	; 18
     808:	08 95       	ret

0000080a <DIO_u8_Get_Pin_Val>:
     80a:	81 30       	cpi	r24, 0x01	; 1
     80c:	79 f0       	breq	.+30     	; 0x82c <DIO_u8_Get_Pin_Val+0x22>
     80e:	28 f0       	brcs	.+10     	; 0x81a <DIO_u8_Get_Pin_Val+0x10>
     810:	82 30       	cpi	r24, 0x02	; 2
     812:	a9 f0       	breq	.+42     	; 0x83e <DIO_u8_Get_Pin_Val+0x34>
     814:	83 30       	cpi	r24, 0x03	; 3
     816:	e1 f0       	breq	.+56     	; 0x850 <DIO_u8_Get_Pin_Val+0x46>
     818:	24 c0       	rjmp	.+72     	; 0x862 <__stack+0x3>
     81a:	89 b3       	in	r24, 0x19	; 25
     81c:	90 e0       	ldi	r25, 0x00	; 0
     81e:	02 c0       	rjmp	.+4      	; 0x824 <DIO_u8_Get_Pin_Val+0x1a>
     820:	95 95       	asr	r25
     822:	87 95       	ror	r24
     824:	6a 95       	dec	r22
     826:	e2 f7       	brpl	.-8      	; 0x820 <DIO_u8_Get_Pin_Val+0x16>
     828:	81 70       	andi	r24, 0x01	; 1
     82a:	08 95       	ret
     82c:	86 b3       	in	r24, 0x16	; 22
     82e:	90 e0       	ldi	r25, 0x00	; 0
     830:	02 c0       	rjmp	.+4      	; 0x836 <DIO_u8_Get_Pin_Val+0x2c>
     832:	95 95       	asr	r25
     834:	87 95       	ror	r24
     836:	6a 95       	dec	r22
     838:	e2 f7       	brpl	.-8      	; 0x832 <DIO_u8_Get_Pin_Val+0x28>
     83a:	81 70       	andi	r24, 0x01	; 1
     83c:	08 95       	ret
     83e:	83 b3       	in	r24, 0x13	; 19
     840:	90 e0       	ldi	r25, 0x00	; 0
     842:	02 c0       	rjmp	.+4      	; 0x848 <DIO_u8_Get_Pin_Val+0x3e>
     844:	95 95       	asr	r25
     846:	87 95       	ror	r24
     848:	6a 95       	dec	r22
     84a:	e2 f7       	brpl	.-8      	; 0x844 <DIO_u8_Get_Pin_Val+0x3a>
     84c:	81 70       	andi	r24, 0x01	; 1
     84e:	08 95       	ret
     850:	80 b3       	in	r24, 0x10	; 16
     852:	90 e0       	ldi	r25, 0x00	; 0
     854:	02 c0       	rjmp	.+4      	; 0x85a <DIO_u8_Get_Pin_Val+0x50>
     856:	95 95       	asr	r25
     858:	87 95       	ror	r24
     85a:	6a 95       	dec	r22
     85c:	e2 f7       	brpl	.-8      	; 0x856 <DIO_u8_Get_Pin_Val+0x4c>
     85e:	81 70       	andi	r24, 0x01	; 1
     860:	08 95       	ret
     862:	80 e0       	ldi	r24, 0x00	; 0
     864:	08 95       	ret

00000866 <DIO_Vid_Toggle_Pin_Val>:
     866:	81 30       	cpi	r24, 0x01	; 1
     868:	89 f0       	breq	.+34     	; 0x88c <DIO_Vid_Toggle_Pin_Val+0x26>
     86a:	28 f0       	brcs	.+10     	; 0x876 <DIO_Vid_Toggle_Pin_Val+0x10>
     86c:	82 30       	cpi	r24, 0x02	; 2
     86e:	c9 f0       	breq	.+50     	; 0x8a2 <DIO_Vid_Toggle_Pin_Val+0x3c>
     870:	83 30       	cpi	r24, 0x03	; 3
     872:	11 f1       	breq	.+68     	; 0x8b8 <DIO_Vid_Toggle_Pin_Val+0x52>
     874:	08 95       	ret
     876:	2b b3       	in	r18, 0x1b	; 27
     878:	81 e0       	ldi	r24, 0x01	; 1
     87a:	90 e0       	ldi	r25, 0x00	; 0
     87c:	02 c0       	rjmp	.+4      	; 0x882 <DIO_Vid_Toggle_Pin_Val+0x1c>
     87e:	88 0f       	add	r24, r24
     880:	99 1f       	adc	r25, r25
     882:	6a 95       	dec	r22
     884:	e2 f7       	brpl	.-8      	; 0x87e <DIO_Vid_Toggle_Pin_Val+0x18>
     886:	82 27       	eor	r24, r18
     888:	8b bb       	out	0x1b, r24	; 27
     88a:	08 95       	ret
     88c:	28 b3       	in	r18, 0x18	; 24
     88e:	81 e0       	ldi	r24, 0x01	; 1
     890:	90 e0       	ldi	r25, 0x00	; 0
     892:	02 c0       	rjmp	.+4      	; 0x898 <DIO_Vid_Toggle_Pin_Val+0x32>
     894:	88 0f       	add	r24, r24
     896:	99 1f       	adc	r25, r25
     898:	6a 95       	dec	r22
     89a:	e2 f7       	brpl	.-8      	; 0x894 <DIO_Vid_Toggle_Pin_Val+0x2e>
     89c:	82 27       	eor	r24, r18
     89e:	88 bb       	out	0x18, r24	; 24
     8a0:	08 95       	ret
     8a2:	25 b3       	in	r18, 0x15	; 21
     8a4:	81 e0       	ldi	r24, 0x01	; 1
     8a6:	90 e0       	ldi	r25, 0x00	; 0
     8a8:	02 c0       	rjmp	.+4      	; 0x8ae <DIO_Vid_Toggle_Pin_Val+0x48>
     8aa:	88 0f       	add	r24, r24
     8ac:	99 1f       	adc	r25, r25
     8ae:	6a 95       	dec	r22
     8b0:	e2 f7       	brpl	.-8      	; 0x8aa <DIO_Vid_Toggle_Pin_Val+0x44>
     8b2:	82 27       	eor	r24, r18
     8b4:	85 bb       	out	0x15, r24	; 21
     8b6:	08 95       	ret
     8b8:	22 b3       	in	r18, 0x12	; 18
     8ba:	81 e0       	ldi	r24, 0x01	; 1
     8bc:	90 e0       	ldi	r25, 0x00	; 0
     8be:	02 c0       	rjmp	.+4      	; 0x8c4 <DIO_Vid_Toggle_Pin_Val+0x5e>
     8c0:	88 0f       	add	r24, r24
     8c2:	99 1f       	adc	r25, r25
     8c4:	6a 95       	dec	r22
     8c6:	e2 f7       	brpl	.-8      	; 0x8c0 <DIO_Vid_Toggle_Pin_Val+0x5a>
     8c8:	82 27       	eor	r24, r18
     8ca:	82 bb       	out	0x12, r24	; 18
     8cc:	08 95       	ret

000008ce <DIO_Vid_Set_Port_Dir>:
     8ce:	6f 3f       	cpi	r22, 0xFF	; 255
     8d0:	a1 f4       	brne	.+40     	; 0x8fa <DIO_Vid_Set_Port_Dir+0x2c>
     8d2:	81 30       	cpi	r24, 0x01	; 1
     8d4:	49 f0       	breq	.+18     	; 0x8e8 <DIO_Vid_Set_Port_Dir+0x1a>
     8d6:	28 f0       	brcs	.+10     	; 0x8e2 <DIO_Vid_Set_Port_Dir+0x14>
     8d8:	82 30       	cpi	r24, 0x02	; 2
     8da:	49 f0       	breq	.+18     	; 0x8ee <DIO_Vid_Set_Port_Dir+0x20>
     8dc:	83 30       	cpi	r24, 0x03	; 3
     8de:	51 f0       	breq	.+20     	; 0x8f4 <DIO_Vid_Set_Port_Dir+0x26>
     8e0:	08 95       	ret
     8e2:	8f ef       	ldi	r24, 0xFF	; 255
     8e4:	8a bb       	out	0x1a, r24	; 26
     8e6:	08 95       	ret
     8e8:	8f ef       	ldi	r24, 0xFF	; 255
     8ea:	87 bb       	out	0x17, r24	; 23
     8ec:	08 95       	ret
     8ee:	8f ef       	ldi	r24, 0xFF	; 255
     8f0:	84 bb       	out	0x14, r24	; 20
     8f2:	08 95       	ret
     8f4:	8f ef       	ldi	r24, 0xFF	; 255
     8f6:	81 bb       	out	0x11, r24	; 17
     8f8:	08 95       	ret
     8fa:	81 30       	cpi	r24, 0x01	; 1
     8fc:	41 f0       	breq	.+16     	; 0x90e <DIO_Vid_Set_Port_Dir+0x40>
     8fe:	28 f0       	brcs	.+10     	; 0x90a <DIO_Vid_Set_Port_Dir+0x3c>
     900:	82 30       	cpi	r24, 0x02	; 2
     902:	39 f0       	breq	.+14     	; 0x912 <DIO_Vid_Set_Port_Dir+0x44>
     904:	83 30       	cpi	r24, 0x03	; 3
     906:	39 f0       	breq	.+14     	; 0x916 <DIO_Vid_Set_Port_Dir+0x48>
     908:	08 95       	ret
     90a:	1a ba       	out	0x1a, r1	; 26
     90c:	08 95       	ret
     90e:	17 ba       	out	0x17, r1	; 23
     910:	08 95       	ret
     912:	14 ba       	out	0x14, r1	; 20
     914:	08 95       	ret
     916:	11 ba       	out	0x11, r1	; 17
     918:	08 95       	ret

0000091a <EEPROM_Send>:
     91a:	8e bb       	out	0x1e, r24	; 30
     91c:	9f bb       	out	0x1f, r25	; 31
     91e:	6d bb       	out	0x1d, r22	; 29
     920:	0f b6       	in	r0, 0x3f	; 63
     922:	07 fe       	sbrs	r0, 7
     924:	05 c0       	rjmp	.+10     	; 0x930 <EEPROM_Send+0x16>
     926:	8f b7       	in	r24, 0x3f	; 63
     928:	8f 77       	andi	r24, 0x7F	; 127
     92a:	8f bf       	out	0x3f, r24	; 63
     92c:	91 e0       	ldi	r25, 0x01	; 1
     92e:	01 c0       	rjmp	.+2      	; 0x932 <EEPROM_Send+0x18>
     930:	90 e0       	ldi	r25, 0x00	; 0
     932:	8c b3       	in	r24, 0x1c	; 28
     934:	84 60       	ori	r24, 0x04	; 4
     936:	8c bb       	out	0x1c, r24	; 28
     938:	8c b3       	in	r24, 0x1c	; 28
     93a:	82 60       	ori	r24, 0x02	; 2
     93c:	8c bb       	out	0x1c, r24	; 28
     93e:	e1 99       	sbic	0x1c, 1	; 28
     940:	fe cf       	rjmp	.-4      	; 0x93e <EEPROM_Send+0x24>
     942:	91 30       	cpi	r25, 0x01	; 1
     944:	19 f4       	brne	.+6      	; 0x94c <EEPROM_Send+0x32>
     946:	8f b7       	in	r24, 0x3f	; 63
     948:	80 68       	ori	r24, 0x80	; 128
     94a:	8f bf       	out	0x3f, r24	; 63
     94c:	08 95       	ret

0000094e <EEPROM_Recieve>:
     94e:	8e bb       	out	0x1e, r24	; 30
     950:	9f bb       	out	0x1f, r25	; 31
     952:	8c b3       	in	r24, 0x1c	; 28
     954:	81 60       	ori	r24, 0x01	; 1
     956:	8c bb       	out	0x1c, r24	; 28
     958:	8d b3       	in	r24, 0x1d	; 29
     95a:	08 95       	ret

0000095c <EXT_Vid_Interrupt_Init0>:
     95c:	81 11       	cpse	r24, r1
     95e:	06 c0       	rjmp	.+12     	; 0x96c <EXT_Vid_Interrupt_Init0+0x10>
     960:	95 b7       	in	r25, 0x35	; 53
     962:	92 60       	ori	r25, 0x02	; 2
     964:	95 bf       	out	0x35, r25	; 53
     966:	95 b7       	in	r25, 0x35	; 53
     968:	91 60       	ori	r25, 0x01	; 1
     96a:	95 bf       	out	0x35, r25	; 53
     96c:	81 30       	cpi	r24, 0x01	; 1
     96e:	31 f4       	brne	.+12     	; 0x97c <EXT_Vid_Interrupt_Init0+0x20>
     970:	95 b7       	in	r25, 0x35	; 53
     972:	92 60       	ori	r25, 0x02	; 2
     974:	95 bf       	out	0x35, r25	; 53
     976:	95 b7       	in	r25, 0x35	; 53
     978:	9e 7f       	andi	r25, 0xFE	; 254
     97a:	95 bf       	out	0x35, r25	; 53
     97c:	82 30       	cpi	r24, 0x02	; 2
     97e:	31 f4       	brne	.+12     	; 0x98c <EXT_Vid_Interrupt_Init0+0x30>
     980:	85 b7       	in	r24, 0x35	; 53
     982:	8d 7f       	andi	r24, 0xFD	; 253
     984:	85 bf       	out	0x35, r24	; 53
     986:	85 b7       	in	r24, 0x35	; 53
     988:	81 60       	ori	r24, 0x01	; 1
     98a:	85 bf       	out	0x35, r24	; 53
     98c:	08 95       	ret

0000098e <EXT_Vid_Interrupt_Init1>:
     98e:	81 11       	cpse	r24, r1
     990:	06 c0       	rjmp	.+12     	; 0x99e <EXT_Vid_Interrupt_Init1+0x10>
     992:	95 b7       	in	r25, 0x35	; 53
     994:	98 60       	ori	r25, 0x08	; 8
     996:	95 bf       	out	0x35, r25	; 53
     998:	95 b7       	in	r25, 0x35	; 53
     99a:	94 60       	ori	r25, 0x04	; 4
     99c:	95 bf       	out	0x35, r25	; 53
     99e:	81 30       	cpi	r24, 0x01	; 1
     9a0:	31 f4       	brne	.+12     	; 0x9ae <EXT_Vid_Interrupt_Init1+0x20>
     9a2:	95 b7       	in	r25, 0x35	; 53
     9a4:	98 60       	ori	r25, 0x08	; 8
     9a6:	95 bf       	out	0x35, r25	; 53
     9a8:	95 b7       	in	r25, 0x35	; 53
     9aa:	9b 7f       	andi	r25, 0xFB	; 251
     9ac:	95 bf       	out	0x35, r25	; 53
     9ae:	82 30       	cpi	r24, 0x02	; 2
     9b0:	31 f4       	brne	.+12     	; 0x9be <EXT_Vid_Interrupt_Init1+0x30>
     9b2:	85 b7       	in	r24, 0x35	; 53
     9b4:	87 7f       	andi	r24, 0xF7	; 247
     9b6:	85 bf       	out	0x35, r24	; 53
     9b8:	85 b7       	in	r24, 0x35	; 53
     9ba:	84 60       	ori	r24, 0x04	; 4
     9bc:	85 bf       	out	0x35, r24	; 53
     9be:	08 95       	ret

000009c0 <EXT_Vid_Interrupt_Init2>:
     9c0:	81 11       	cpse	r24, r1
     9c2:	03 c0       	rjmp	.+6      	; 0x9ca <EXT_Vid_Interrupt_Init2+0xa>
     9c4:	94 b7       	in	r25, 0x34	; 52
     9c6:	90 64       	ori	r25, 0x40	; 64
     9c8:	94 bf       	out	0x34, r25	; 52
     9ca:	81 30       	cpi	r24, 0x01	; 1
     9cc:	19 f4       	brne	.+6      	; 0x9d4 <EXT_Vid_Interrupt_Init2+0x14>
     9ce:	84 b7       	in	r24, 0x34	; 52
     9d0:	8f 7b       	andi	r24, 0xBF	; 191
     9d2:	84 bf       	out	0x34, r24	; 52
     9d4:	08 95       	ret

000009d6 <EXT_Vid_Interrupt0>:
     9d6:	0e 94 87 05 	call	0xb0e	; 0xb0e <GIE_Vid_Enable>
     9da:	8b b7       	in	r24, 0x3b	; 59
     9dc:	80 64       	ori	r24, 0x40	; 64
     9de:	8b bf       	out	0x3b, r24	; 59
     9e0:	08 95       	ret

000009e2 <EXT_Vid_Interrupt1>:
     9e2:	0e 94 87 05 	call	0xb0e	; 0xb0e <GIE_Vid_Enable>
     9e6:	8b b7       	in	r24, 0x3b	; 59
     9e8:	80 68       	ori	r24, 0x80	; 128
     9ea:	8b bf       	out	0x3b, r24	; 59
     9ec:	08 95       	ret

000009ee <EXT_Vid_Interrupt2>:
     9ee:	0e 94 87 05 	call	0xb0e	; 0xb0e <GIE_Vid_Enable>
     9f2:	8b b7       	in	r24, 0x3b	; 59
     9f4:	80 62       	ori	r24, 0x20	; 32
     9f6:	8b bf       	out	0x3b, r24	; 59
     9f8:	08 95       	ret

000009fa <EXT_Vid_Set_CallBack>:
     9fa:	90 93 8b 00 	sts	0x008B, r25	; 0x80008b <ptr_int0+0x1>
     9fe:	80 93 8a 00 	sts	0x008A, r24	; 0x80008a <ptr_int0>
     a02:	08 95       	ret

00000a04 <EXT_Vid_Set_CallBack_2>:
     a04:	90 93 8f 00 	sts	0x008F, r25	; 0x80008f <ptr_int1+0x1>
     a08:	80 93 8e 00 	sts	0x008E, r24	; 0x80008e <ptr_int1>
     a0c:	08 95       	ret

00000a0e <EXT_Vid_Set_CallBack_3>:
     a0e:	90 93 8d 00 	sts	0x008D, r25	; 0x80008d <ptr_int2+0x1>
     a12:	80 93 8c 00 	sts	0x008C, r24	; 0x80008c <ptr_int2>
     a16:	08 95       	ret

00000a18 <__vector_1>:
     a18:	1f 92       	push	r1
     a1a:	0f 92       	push	r0
     a1c:	0f b6       	in	r0, 0x3f	; 63
     a1e:	0f 92       	push	r0
     a20:	11 24       	eor	r1, r1
     a22:	2f 93       	push	r18
     a24:	3f 93       	push	r19
     a26:	4f 93       	push	r20
     a28:	5f 93       	push	r21
     a2a:	6f 93       	push	r22
     a2c:	7f 93       	push	r23
     a2e:	8f 93       	push	r24
     a30:	9f 93       	push	r25
     a32:	af 93       	push	r26
     a34:	bf 93       	push	r27
     a36:	ef 93       	push	r30
     a38:	ff 93       	push	r31
     a3a:	e0 91 8a 00 	lds	r30, 0x008A	; 0x80008a <ptr_int0>
     a3e:	f0 91 8b 00 	lds	r31, 0x008B	; 0x80008b <ptr_int0+0x1>
     a42:	30 97       	sbiw	r30, 0x00	; 0
     a44:	09 f0       	breq	.+2      	; 0xa48 <__vector_1+0x30>
     a46:	09 95       	icall
     a48:	ff 91       	pop	r31
     a4a:	ef 91       	pop	r30
     a4c:	bf 91       	pop	r27
     a4e:	af 91       	pop	r26
     a50:	9f 91       	pop	r25
     a52:	8f 91       	pop	r24
     a54:	7f 91       	pop	r23
     a56:	6f 91       	pop	r22
     a58:	5f 91       	pop	r21
     a5a:	4f 91       	pop	r20
     a5c:	3f 91       	pop	r19
     a5e:	2f 91       	pop	r18
     a60:	0f 90       	pop	r0
     a62:	0f be       	out	0x3f, r0	; 63
     a64:	0f 90       	pop	r0
     a66:	1f 90       	pop	r1
     a68:	18 95       	reti

00000a6a <__vector_2>:
     a6a:	1f 92       	push	r1
     a6c:	0f 92       	push	r0
     a6e:	0f b6       	in	r0, 0x3f	; 63
     a70:	0f 92       	push	r0
     a72:	11 24       	eor	r1, r1
     a74:	2f 93       	push	r18
     a76:	3f 93       	push	r19
     a78:	4f 93       	push	r20
     a7a:	5f 93       	push	r21
     a7c:	6f 93       	push	r22
     a7e:	7f 93       	push	r23
     a80:	8f 93       	push	r24
     a82:	9f 93       	push	r25
     a84:	af 93       	push	r26
     a86:	bf 93       	push	r27
     a88:	ef 93       	push	r30
     a8a:	ff 93       	push	r31
     a8c:	e0 91 8e 00 	lds	r30, 0x008E	; 0x80008e <ptr_int1>
     a90:	f0 91 8f 00 	lds	r31, 0x008F	; 0x80008f <ptr_int1+0x1>
     a94:	30 97       	sbiw	r30, 0x00	; 0
     a96:	09 f0       	breq	.+2      	; 0xa9a <__vector_2+0x30>
     a98:	09 95       	icall
     a9a:	ff 91       	pop	r31
     a9c:	ef 91       	pop	r30
     a9e:	bf 91       	pop	r27
     aa0:	af 91       	pop	r26
     aa2:	9f 91       	pop	r25
     aa4:	8f 91       	pop	r24
     aa6:	7f 91       	pop	r23
     aa8:	6f 91       	pop	r22
     aaa:	5f 91       	pop	r21
     aac:	4f 91       	pop	r20
     aae:	3f 91       	pop	r19
     ab0:	2f 91       	pop	r18
     ab2:	0f 90       	pop	r0
     ab4:	0f be       	out	0x3f, r0	; 63
     ab6:	0f 90       	pop	r0
     ab8:	1f 90       	pop	r1
     aba:	18 95       	reti

00000abc <__vector_3>:
     abc:	1f 92       	push	r1
     abe:	0f 92       	push	r0
     ac0:	0f b6       	in	r0, 0x3f	; 63
     ac2:	0f 92       	push	r0
     ac4:	11 24       	eor	r1, r1
     ac6:	2f 93       	push	r18
     ac8:	3f 93       	push	r19
     aca:	4f 93       	push	r20
     acc:	5f 93       	push	r21
     ace:	6f 93       	push	r22
     ad0:	7f 93       	push	r23
     ad2:	8f 93       	push	r24
     ad4:	9f 93       	push	r25
     ad6:	af 93       	push	r26
     ad8:	bf 93       	push	r27
     ada:	ef 93       	push	r30
     adc:	ff 93       	push	r31
     ade:	e0 91 8c 00 	lds	r30, 0x008C	; 0x80008c <ptr_int2>
     ae2:	f0 91 8d 00 	lds	r31, 0x008D	; 0x80008d <ptr_int2+0x1>
     ae6:	30 97       	sbiw	r30, 0x00	; 0
     ae8:	09 f0       	breq	.+2      	; 0xaec <__vector_3+0x30>
     aea:	09 95       	icall
     aec:	ff 91       	pop	r31
     aee:	ef 91       	pop	r30
     af0:	bf 91       	pop	r27
     af2:	af 91       	pop	r26
     af4:	9f 91       	pop	r25
     af6:	8f 91       	pop	r24
     af8:	7f 91       	pop	r23
     afa:	6f 91       	pop	r22
     afc:	5f 91       	pop	r21
     afe:	4f 91       	pop	r20
     b00:	3f 91       	pop	r19
     b02:	2f 91       	pop	r18
     b04:	0f 90       	pop	r0
     b06:	0f be       	out	0x3f, r0	; 63
     b08:	0f 90       	pop	r0
     b0a:	1f 90       	pop	r1
     b0c:	18 95       	reti

00000b0e <GIE_Vid_Enable>:
     b0e:	8f b7       	in	r24, 0x3f	; 63
     b10:	80 68       	ori	r24, 0x80	; 128
     b12:	8f bf       	out	0x3f, r24	; 63
     b14:	08 95       	ret

00000b16 <TIMER0_Vid_Start>:
     b16:	93 b7       	in	r25, 0x33	; 51
     b18:	98 7f       	andi	r25, 0xF8	; 248
     b1a:	93 bf       	out	0x33, r25	; 51
     b1c:	93 b7       	in	r25, 0x33	; 51
     b1e:	97 7f       	andi	r25, 0xF7	; 247
     b20:	93 bf       	out	0x33, r25	; 51
     b22:	93 b7       	in	r25, 0x33	; 51
     b24:	9f 7b       	andi	r25, 0xBF	; 191
     b26:	93 bf       	out	0x33, r25	; 51
     b28:	93 b7       	in	r25, 0x33	; 51
     b2a:	89 2b       	or	r24, r25
     b2c:	83 bf       	out	0x33, r24	; 51
     b2e:	08 95       	ret

00000b30 <TIMER0_Vid_Interrupt_Enable_Every>:
     b30:	cf 92       	push	r12
     b32:	df 92       	push	r13
     b34:	ef 92       	push	r14
     b36:	ff 92       	push	r15
     b38:	cf 93       	push	r28
     b3a:	df 93       	push	r29
     b3c:	ec 01       	movw	r28, r24
     b3e:	0e 94 87 05 	call	0xb0e	; 0xb0e <GIE_Vid_Enable>
     b42:	89 b7       	in	r24, 0x39	; 57
     b44:	81 60       	ori	r24, 0x01	; 1
     b46:	89 bf       	out	0x39, r24	; 57
     b48:	60 91 6a 00 	lds	r22, 0x006A	; 0x80006a <AR_Prescaler+0x6>
     b4c:	70 91 6b 00 	lds	r23, 0x006B	; 0x80006b <AR_Prescaler+0x7>
     b50:	80 e0       	ldi	r24, 0x00	; 0
     b52:	90 e0       	ldi	r25, 0x00	; 0
     b54:	0e 94 19 07 	call	0xe32	; 0xe32 <__floatunsisf>
     b58:	20 e0       	ldi	r18, 0x00	; 0
     b5a:	30 e0       	ldi	r19, 0x00	; 0
     b5c:	40 e8       	ldi	r20, 0x80	; 128
     b5e:	53 e4       	ldi	r21, 0x43	; 67
     b60:	0e 94 a7 07 	call	0xf4e	; 0xf4e <__mulsf3>
     b64:	20 e0       	ldi	r18, 0x00	; 0
     b66:	30 e0       	ldi	r19, 0x00	; 0
     b68:	4a e7       	ldi	r20, 0x7A	; 122
     b6a:	56 e4       	ldi	r21, 0x46	; 70
     b6c:	0e 94 78 06 	call	0xcf0	; 0xcf0 <__divsf3>
     b70:	6b 01       	movw	r12, r22
     b72:	7c 01       	movw	r14, r24
     b74:	be 01       	movw	r22, r28
     b76:	80 e0       	ldi	r24, 0x00	; 0
     b78:	90 e0       	ldi	r25, 0x00	; 0
     b7a:	0e 94 19 07 	call	0xe32	; 0xe32 <__floatunsisf>
     b7e:	a7 01       	movw	r20, r14
     b80:	96 01       	movw	r18, r12
     b82:	0e 94 78 06 	call	0xcf0	; 0xcf0 <__divsf3>
     b86:	0e 94 ea 06 	call	0xdd4	; 0xdd4 <__fixunssfsi>
     b8a:	70 93 85 00 	sts	0x0085, r23	; 0x800085 <OF_Count+0x1>
     b8e:	60 93 84 00 	sts	0x0084, r22	; 0x800084 <OF_Count>
     b92:	83 e0       	ldi	r24, 0x03	; 3
     b94:	0e 94 8b 05 	call	0xb16	; 0xb16 <TIMER0_Vid_Start>
     b98:	df 91       	pop	r29
     b9a:	cf 91       	pop	r28
     b9c:	ff 90       	pop	r15
     b9e:	ef 90       	pop	r14
     ba0:	df 90       	pop	r13
     ba2:	cf 90       	pop	r12
     ba4:	08 95       	ret

00000ba6 <TIMER0_Vid_Set_CallBack>:
     ba6:	90 93 91 00 	sts	0x0091, r25	; 0x800091 <ptr_TIMER0_int+0x1>
     baa:	80 93 90 00 	sts	0x0090, r24	; 0x800090 <ptr_TIMER0_int>
     bae:	08 95       	ret

00000bb0 <__vector_11>:
     bb0:	1f 92       	push	r1
     bb2:	0f 92       	push	r0
     bb4:	0f b6       	in	r0, 0x3f	; 63
     bb6:	0f 92       	push	r0
     bb8:	11 24       	eor	r1, r1
     bba:	2f 93       	push	r18
     bbc:	3f 93       	push	r19
     bbe:	4f 93       	push	r20
     bc0:	5f 93       	push	r21
     bc2:	6f 93       	push	r22
     bc4:	7f 93       	push	r23
     bc6:	8f 93       	push	r24
     bc8:	9f 93       	push	r25
     bca:	af 93       	push	r26
     bcc:	bf 93       	push	r27
     bce:	ef 93       	push	r30
     bd0:	ff 93       	push	r31
     bd2:	e0 91 90 00 	lds	r30, 0x0090	; 0x800090 <ptr_TIMER0_int>
     bd6:	f0 91 91 00 	lds	r31, 0x0091	; 0x800091 <ptr_TIMER0_int+0x1>
     bda:	30 97       	sbiw	r30, 0x00	; 0
     bdc:	09 f0       	breq	.+2      	; 0xbe0 <__vector_11+0x30>
     bde:	09 95       	icall
     be0:	ff 91       	pop	r31
     be2:	ef 91       	pop	r30
     be4:	bf 91       	pop	r27
     be6:	af 91       	pop	r26
     be8:	9f 91       	pop	r25
     bea:	8f 91       	pop	r24
     bec:	7f 91       	pop	r23
     bee:	6f 91       	pop	r22
     bf0:	5f 91       	pop	r21
     bf2:	4f 91       	pop	r20
     bf4:	3f 91       	pop	r19
     bf6:	2f 91       	pop	r18
     bf8:	0f 90       	pop	r0
     bfa:	0f be       	out	0x3f, r0	; 63
     bfc:	0f 90       	pop	r0
     bfe:	1f 90       	pop	r1
     c00:	18 95       	reti

00000c02 <TIMER1_Vid_Start>:
     c02:	9e b5       	in	r25, 0x2e	; 46
     c04:	98 7f       	andi	r25, 0xF8	; 248
     c06:	9e bd       	out	0x2e, r25	; 46
     c08:	9f b5       	in	r25, 0x2f	; 47
     c0a:	9e 7f       	andi	r25, 0xFE	; 254
     c0c:	9f bd       	out	0x2f, r25	; 47
     c0e:	9f b5       	in	r25, 0x2f	; 47
     c10:	9d 7f       	andi	r25, 0xFD	; 253
     c12:	9f bd       	out	0x2f, r25	; 47
     c14:	9e b5       	in	r25, 0x2e	; 46
     c16:	97 7f       	andi	r25, 0xF7	; 247
     c18:	9e bd       	out	0x2e, r25	; 46
     c1a:	9e b5       	in	r25, 0x2e	; 46
     c1c:	9f 7e       	andi	r25, 0xEF	; 239
     c1e:	9e bd       	out	0x2e, r25	; 46
     c20:	9e b5       	in	r25, 0x2e	; 46
     c22:	89 2b       	or	r24, r25
     c24:	8e bd       	out	0x2e, r24	; 46
     c26:	08 95       	ret

00000c28 <TIMER1_Vid_CTC_Init>:
     c28:	8e b5       	in	r24, 0x2e	; 46
     c2a:	88 60       	ori	r24, 0x08	; 8
     c2c:	8e bd       	out	0x2e, r24	; 46
     c2e:	84 e2       	ldi	r24, 0x24	; 36
     c30:	94 ef       	ldi	r25, 0xF4	; 244
     c32:	9b bd       	out	0x2b, r25	; 43
     c34:	8a bd       	out	0x2a, r24	; 42
     c36:	84 e0       	ldi	r24, 0x04	; 4
     c38:	0e 94 01 06 	call	0xc02	; 0xc02 <TIMER1_Vid_Start>
     c3c:	0e 94 87 05 	call	0xb0e	; 0xb0e <GIE_Vid_Enable>
     c40:	08 95       	ret

00000c42 <TIMER1_Vid_CTC_InterruptEnable>:
     c42:	89 b7       	in	r24, 0x39	; 57
     c44:	80 61       	ori	r24, 0x10	; 16
     c46:	89 bf       	out	0x39, r24	; 57
     c48:	08 95       	ret

00000c4a <Timer1_CTC_SetCallBack>:
     c4a:	90 93 87 00 	sts	0x0087, r25	; 0x800087 <ptr_CV+0x1>
     c4e:	80 93 86 00 	sts	0x0086, r24	; 0x800086 <ptr_CV>
     c52:	08 95       	ret

00000c54 <__vector_7>:
     c54:	1f 92       	push	r1
     c56:	0f 92       	push	r0
     c58:	0f b6       	in	r0, 0x3f	; 63
     c5a:	0f 92       	push	r0
     c5c:	11 24       	eor	r1, r1
     c5e:	2f 93       	push	r18
     c60:	3f 93       	push	r19
     c62:	4f 93       	push	r20
     c64:	5f 93       	push	r21
     c66:	6f 93       	push	r22
     c68:	7f 93       	push	r23
     c6a:	8f 93       	push	r24
     c6c:	9f 93       	push	r25
     c6e:	af 93       	push	r26
     c70:	bf 93       	push	r27
     c72:	ef 93       	push	r30
     c74:	ff 93       	push	r31
     c76:	e0 91 86 00 	lds	r30, 0x0086	; 0x800086 <ptr_CV>
     c7a:	f0 91 87 00 	lds	r31, 0x0087	; 0x800087 <ptr_CV+0x1>
     c7e:	09 95       	icall
     c80:	ff 91       	pop	r31
     c82:	ef 91       	pop	r30
     c84:	bf 91       	pop	r27
     c86:	af 91       	pop	r26
     c88:	9f 91       	pop	r25
     c8a:	8f 91       	pop	r24
     c8c:	7f 91       	pop	r23
     c8e:	6f 91       	pop	r22
     c90:	5f 91       	pop	r21
     c92:	4f 91       	pop	r20
     c94:	3f 91       	pop	r19
     c96:	2f 91       	pop	r18
     c98:	0f 90       	pop	r0
     c9a:	0f be       	out	0x3f, r0	; 63
     c9c:	0f 90       	pop	r0
     c9e:	1f 90       	pop	r1
     ca0:	18 95       	reti

00000ca2 <__vector_9>:
     ca2:	1f 92       	push	r1
     ca4:	0f 92       	push	r0
     ca6:	0f b6       	in	r0, 0x3f	; 63
     ca8:	0f 92       	push	r0
     caa:	11 24       	eor	r1, r1
     cac:	2f 93       	push	r18
     cae:	3f 93       	push	r19
     cb0:	4f 93       	push	r20
     cb2:	5f 93       	push	r21
     cb4:	6f 93       	push	r22
     cb6:	7f 93       	push	r23
     cb8:	8f 93       	push	r24
     cba:	9f 93       	push	r25
     cbc:	af 93       	push	r26
     cbe:	bf 93       	push	r27
     cc0:	ef 93       	push	r30
     cc2:	ff 93       	push	r31
     cc4:	e0 91 92 00 	lds	r30, 0x0092	; 0x800092 <ptr_OF>
     cc8:	f0 91 93 00 	lds	r31, 0x0093	; 0x800093 <ptr_OF+0x1>
     ccc:	09 95       	icall
     cce:	ff 91       	pop	r31
     cd0:	ef 91       	pop	r30
     cd2:	bf 91       	pop	r27
     cd4:	af 91       	pop	r26
     cd6:	9f 91       	pop	r25
     cd8:	8f 91       	pop	r24
     cda:	7f 91       	pop	r23
     cdc:	6f 91       	pop	r22
     cde:	5f 91       	pop	r21
     ce0:	4f 91       	pop	r20
     ce2:	3f 91       	pop	r19
     ce4:	2f 91       	pop	r18
     ce6:	0f 90       	pop	r0
     ce8:	0f be       	out	0x3f, r0	; 63
     cea:	0f 90       	pop	r0
     cec:	1f 90       	pop	r1
     cee:	18 95       	reti

00000cf0 <__divsf3>:
     cf0:	0e 94 8c 06 	call	0xd18	; 0xd18 <__divsf3x>
     cf4:	0c 94 6d 07 	jmp	0xeda	; 0xeda <__fp_round>
     cf8:	0e 94 66 07 	call	0xecc	; 0xecc <__fp_pscB>
     cfc:	58 f0       	brcs	.+22     	; 0xd14 <__divsf3+0x24>
     cfe:	0e 94 5f 07 	call	0xebe	; 0xebe <__fp_pscA>
     d02:	40 f0       	brcs	.+16     	; 0xd14 <__divsf3+0x24>
     d04:	29 f4       	brne	.+10     	; 0xd10 <__divsf3+0x20>
     d06:	5f 3f       	cpi	r21, 0xFF	; 255
     d08:	29 f0       	breq	.+10     	; 0xd14 <__divsf3+0x24>
     d0a:	0c 94 56 07 	jmp	0xeac	; 0xeac <__fp_inf>
     d0e:	51 11       	cpse	r21, r1
     d10:	0c 94 a1 07 	jmp	0xf42	; 0xf42 <__fp_szero>
     d14:	0c 94 5c 07 	jmp	0xeb8	; 0xeb8 <__fp_nan>

00000d18 <__divsf3x>:
     d18:	0e 94 7e 07 	call	0xefc	; 0xefc <__fp_split3>
     d1c:	68 f3       	brcs	.-38     	; 0xcf8 <__divsf3+0x8>

00000d1e <__divsf3_pse>:
     d1e:	99 23       	and	r25, r25
     d20:	b1 f3       	breq	.-20     	; 0xd0e <__divsf3+0x1e>
     d22:	55 23       	and	r21, r21
     d24:	91 f3       	breq	.-28     	; 0xd0a <__divsf3+0x1a>
     d26:	95 1b       	sub	r25, r21
     d28:	55 0b       	sbc	r21, r21
     d2a:	bb 27       	eor	r27, r27
     d2c:	aa 27       	eor	r26, r26
     d2e:	62 17       	cp	r22, r18
     d30:	73 07       	cpc	r23, r19
     d32:	84 07       	cpc	r24, r20
     d34:	38 f0       	brcs	.+14     	; 0xd44 <__divsf3_pse+0x26>
     d36:	9f 5f       	subi	r25, 0xFF	; 255
     d38:	5f 4f       	sbci	r21, 0xFF	; 255
     d3a:	22 0f       	add	r18, r18
     d3c:	33 1f       	adc	r19, r19
     d3e:	44 1f       	adc	r20, r20
     d40:	aa 1f       	adc	r26, r26
     d42:	a9 f3       	breq	.-22     	; 0xd2e <__divsf3_pse+0x10>
     d44:	35 d0       	rcall	.+106    	; 0xdb0 <__divsf3_pse+0x92>
     d46:	0e 2e       	mov	r0, r30
     d48:	3a f0       	brmi	.+14     	; 0xd58 <__divsf3_pse+0x3a>
     d4a:	e0 e8       	ldi	r30, 0x80	; 128
     d4c:	32 d0       	rcall	.+100    	; 0xdb2 <__divsf3_pse+0x94>
     d4e:	91 50       	subi	r25, 0x01	; 1
     d50:	50 40       	sbci	r21, 0x00	; 0
     d52:	e6 95       	lsr	r30
     d54:	00 1c       	adc	r0, r0
     d56:	ca f7       	brpl	.-14     	; 0xd4a <__divsf3_pse+0x2c>
     d58:	2b d0       	rcall	.+86     	; 0xdb0 <__divsf3_pse+0x92>
     d5a:	fe 2f       	mov	r31, r30
     d5c:	29 d0       	rcall	.+82     	; 0xdb0 <__divsf3_pse+0x92>
     d5e:	66 0f       	add	r22, r22
     d60:	77 1f       	adc	r23, r23
     d62:	88 1f       	adc	r24, r24
     d64:	bb 1f       	adc	r27, r27
     d66:	26 17       	cp	r18, r22
     d68:	37 07       	cpc	r19, r23
     d6a:	48 07       	cpc	r20, r24
     d6c:	ab 07       	cpc	r26, r27
     d6e:	b0 e8       	ldi	r27, 0x80	; 128
     d70:	09 f0       	breq	.+2      	; 0xd74 <__divsf3_pse+0x56>
     d72:	bb 0b       	sbc	r27, r27
     d74:	80 2d       	mov	r24, r0
     d76:	bf 01       	movw	r22, r30
     d78:	ff 27       	eor	r31, r31
     d7a:	93 58       	subi	r25, 0x83	; 131
     d7c:	5f 4f       	sbci	r21, 0xFF	; 255
     d7e:	3a f0       	brmi	.+14     	; 0xd8e <__divsf3_pse+0x70>
     d80:	9e 3f       	cpi	r25, 0xFE	; 254
     d82:	51 05       	cpc	r21, r1
     d84:	78 f0       	brcs	.+30     	; 0xda4 <__divsf3_pse+0x86>
     d86:	0c 94 56 07 	jmp	0xeac	; 0xeac <__fp_inf>
     d8a:	0c 94 a1 07 	jmp	0xf42	; 0xf42 <__fp_szero>
     d8e:	5f 3f       	cpi	r21, 0xFF	; 255
     d90:	e4 f3       	brlt	.-8      	; 0xd8a <__divsf3_pse+0x6c>
     d92:	98 3e       	cpi	r25, 0xE8	; 232
     d94:	d4 f3       	brlt	.-12     	; 0xd8a <__divsf3_pse+0x6c>
     d96:	86 95       	lsr	r24
     d98:	77 95       	ror	r23
     d9a:	67 95       	ror	r22
     d9c:	b7 95       	ror	r27
     d9e:	f7 95       	ror	r31
     da0:	9f 5f       	subi	r25, 0xFF	; 255
     da2:	c9 f7       	brne	.-14     	; 0xd96 <__divsf3_pse+0x78>
     da4:	88 0f       	add	r24, r24
     da6:	91 1d       	adc	r25, r1
     da8:	96 95       	lsr	r25
     daa:	87 95       	ror	r24
     dac:	97 f9       	bld	r25, 7
     dae:	08 95       	ret
     db0:	e1 e0       	ldi	r30, 0x01	; 1
     db2:	66 0f       	add	r22, r22
     db4:	77 1f       	adc	r23, r23
     db6:	88 1f       	adc	r24, r24
     db8:	bb 1f       	adc	r27, r27
     dba:	62 17       	cp	r22, r18
     dbc:	73 07       	cpc	r23, r19
     dbe:	84 07       	cpc	r24, r20
     dc0:	ba 07       	cpc	r27, r26
     dc2:	20 f0       	brcs	.+8      	; 0xdcc <__divsf3_pse+0xae>
     dc4:	62 1b       	sub	r22, r18
     dc6:	73 0b       	sbc	r23, r19
     dc8:	84 0b       	sbc	r24, r20
     dca:	ba 0b       	sbc	r27, r26
     dcc:	ee 1f       	adc	r30, r30
     dce:	88 f7       	brcc	.-30     	; 0xdb2 <__divsf3_pse+0x94>
     dd0:	e0 95       	com	r30
     dd2:	08 95       	ret

00000dd4 <__fixunssfsi>:
     dd4:	0e 94 86 07 	call	0xf0c	; 0xf0c <__fp_splitA>
     dd8:	88 f0       	brcs	.+34     	; 0xdfc <__fixunssfsi+0x28>
     dda:	9f 57       	subi	r25, 0x7F	; 127
     ddc:	98 f0       	brcs	.+38     	; 0xe04 <__fixunssfsi+0x30>
     dde:	b9 2f       	mov	r27, r25
     de0:	99 27       	eor	r25, r25
     de2:	b7 51       	subi	r27, 0x17	; 23
     de4:	b0 f0       	brcs	.+44     	; 0xe12 <__fixunssfsi+0x3e>
     de6:	e1 f0       	breq	.+56     	; 0xe20 <__fixunssfsi+0x4c>
     de8:	66 0f       	add	r22, r22
     dea:	77 1f       	adc	r23, r23
     dec:	88 1f       	adc	r24, r24
     dee:	99 1f       	adc	r25, r25
     df0:	1a f0       	brmi	.+6      	; 0xdf8 <__fixunssfsi+0x24>
     df2:	ba 95       	dec	r27
     df4:	c9 f7       	brne	.-14     	; 0xde8 <__fixunssfsi+0x14>
     df6:	14 c0       	rjmp	.+40     	; 0xe20 <__fixunssfsi+0x4c>
     df8:	b1 30       	cpi	r27, 0x01	; 1
     dfa:	91 f0       	breq	.+36     	; 0xe20 <__fixunssfsi+0x4c>
     dfc:	0e 94 a0 07 	call	0xf40	; 0xf40 <__fp_zero>
     e00:	b1 e0       	ldi	r27, 0x01	; 1
     e02:	08 95       	ret
     e04:	0c 94 a0 07 	jmp	0xf40	; 0xf40 <__fp_zero>
     e08:	67 2f       	mov	r22, r23
     e0a:	78 2f       	mov	r23, r24
     e0c:	88 27       	eor	r24, r24
     e0e:	b8 5f       	subi	r27, 0xF8	; 248
     e10:	39 f0       	breq	.+14     	; 0xe20 <__fixunssfsi+0x4c>
     e12:	b9 3f       	cpi	r27, 0xF9	; 249
     e14:	cc f3       	brlt	.-14     	; 0xe08 <__fixunssfsi+0x34>
     e16:	86 95       	lsr	r24
     e18:	77 95       	ror	r23
     e1a:	67 95       	ror	r22
     e1c:	b3 95       	inc	r27
     e1e:	d9 f7       	brne	.-10     	; 0xe16 <__fixunssfsi+0x42>
     e20:	3e f4       	brtc	.+14     	; 0xe30 <__fixunssfsi+0x5c>
     e22:	90 95       	com	r25
     e24:	80 95       	com	r24
     e26:	70 95       	com	r23
     e28:	61 95       	neg	r22
     e2a:	7f 4f       	sbci	r23, 0xFF	; 255
     e2c:	8f 4f       	sbci	r24, 0xFF	; 255
     e2e:	9f 4f       	sbci	r25, 0xFF	; 255
     e30:	08 95       	ret

00000e32 <__floatunsisf>:
     e32:	e8 94       	clt
     e34:	09 c0       	rjmp	.+18     	; 0xe48 <__floatsisf+0x12>

00000e36 <__floatsisf>:
     e36:	97 fb       	bst	r25, 7
     e38:	3e f4       	brtc	.+14     	; 0xe48 <__floatsisf+0x12>
     e3a:	90 95       	com	r25
     e3c:	80 95       	com	r24
     e3e:	70 95       	com	r23
     e40:	61 95       	neg	r22
     e42:	7f 4f       	sbci	r23, 0xFF	; 255
     e44:	8f 4f       	sbci	r24, 0xFF	; 255
     e46:	9f 4f       	sbci	r25, 0xFF	; 255
     e48:	99 23       	and	r25, r25
     e4a:	a9 f0       	breq	.+42     	; 0xe76 <__floatsisf+0x40>
     e4c:	f9 2f       	mov	r31, r25
     e4e:	96 e9       	ldi	r25, 0x96	; 150
     e50:	bb 27       	eor	r27, r27
     e52:	93 95       	inc	r25
     e54:	f6 95       	lsr	r31
     e56:	87 95       	ror	r24
     e58:	77 95       	ror	r23
     e5a:	67 95       	ror	r22
     e5c:	b7 95       	ror	r27
     e5e:	f1 11       	cpse	r31, r1
     e60:	f8 cf       	rjmp	.-16     	; 0xe52 <__floatsisf+0x1c>
     e62:	fa f4       	brpl	.+62     	; 0xea2 <__floatsisf+0x6c>
     e64:	bb 0f       	add	r27, r27
     e66:	11 f4       	brne	.+4      	; 0xe6c <__floatsisf+0x36>
     e68:	60 ff       	sbrs	r22, 0
     e6a:	1b c0       	rjmp	.+54     	; 0xea2 <__floatsisf+0x6c>
     e6c:	6f 5f       	subi	r22, 0xFF	; 255
     e6e:	7f 4f       	sbci	r23, 0xFF	; 255
     e70:	8f 4f       	sbci	r24, 0xFF	; 255
     e72:	9f 4f       	sbci	r25, 0xFF	; 255
     e74:	16 c0       	rjmp	.+44     	; 0xea2 <__floatsisf+0x6c>
     e76:	88 23       	and	r24, r24
     e78:	11 f0       	breq	.+4      	; 0xe7e <__floatsisf+0x48>
     e7a:	96 e9       	ldi	r25, 0x96	; 150
     e7c:	11 c0       	rjmp	.+34     	; 0xea0 <__floatsisf+0x6a>
     e7e:	77 23       	and	r23, r23
     e80:	21 f0       	breq	.+8      	; 0xe8a <__floatsisf+0x54>
     e82:	9e e8       	ldi	r25, 0x8E	; 142
     e84:	87 2f       	mov	r24, r23
     e86:	76 2f       	mov	r23, r22
     e88:	05 c0       	rjmp	.+10     	; 0xe94 <__floatsisf+0x5e>
     e8a:	66 23       	and	r22, r22
     e8c:	71 f0       	breq	.+28     	; 0xeaa <__floatsisf+0x74>
     e8e:	96 e8       	ldi	r25, 0x86	; 134
     e90:	86 2f       	mov	r24, r22
     e92:	70 e0       	ldi	r23, 0x00	; 0
     e94:	60 e0       	ldi	r22, 0x00	; 0
     e96:	2a f0       	brmi	.+10     	; 0xea2 <__floatsisf+0x6c>
     e98:	9a 95       	dec	r25
     e9a:	66 0f       	add	r22, r22
     e9c:	77 1f       	adc	r23, r23
     e9e:	88 1f       	adc	r24, r24
     ea0:	da f7       	brpl	.-10     	; 0xe98 <__floatsisf+0x62>
     ea2:	88 0f       	add	r24, r24
     ea4:	96 95       	lsr	r25
     ea6:	87 95       	ror	r24
     ea8:	97 f9       	bld	r25, 7
     eaa:	08 95       	ret

00000eac <__fp_inf>:
     eac:	97 f9       	bld	r25, 7
     eae:	9f 67       	ori	r25, 0x7F	; 127
     eb0:	80 e8       	ldi	r24, 0x80	; 128
     eb2:	70 e0       	ldi	r23, 0x00	; 0
     eb4:	60 e0       	ldi	r22, 0x00	; 0
     eb6:	08 95       	ret

00000eb8 <__fp_nan>:
     eb8:	9f ef       	ldi	r25, 0xFF	; 255
     eba:	80 ec       	ldi	r24, 0xC0	; 192
     ebc:	08 95       	ret

00000ebe <__fp_pscA>:
     ebe:	00 24       	eor	r0, r0
     ec0:	0a 94       	dec	r0
     ec2:	16 16       	cp	r1, r22
     ec4:	17 06       	cpc	r1, r23
     ec6:	18 06       	cpc	r1, r24
     ec8:	09 06       	cpc	r0, r25
     eca:	08 95       	ret

00000ecc <__fp_pscB>:
     ecc:	00 24       	eor	r0, r0
     ece:	0a 94       	dec	r0
     ed0:	12 16       	cp	r1, r18
     ed2:	13 06       	cpc	r1, r19
     ed4:	14 06       	cpc	r1, r20
     ed6:	05 06       	cpc	r0, r21
     ed8:	08 95       	ret

00000eda <__fp_round>:
     eda:	09 2e       	mov	r0, r25
     edc:	03 94       	inc	r0
     ede:	00 0c       	add	r0, r0
     ee0:	11 f4       	brne	.+4      	; 0xee6 <__fp_round+0xc>
     ee2:	88 23       	and	r24, r24
     ee4:	52 f0       	brmi	.+20     	; 0xefa <__fp_round+0x20>
     ee6:	bb 0f       	add	r27, r27
     ee8:	40 f4       	brcc	.+16     	; 0xefa <__fp_round+0x20>
     eea:	bf 2b       	or	r27, r31
     eec:	11 f4       	brne	.+4      	; 0xef2 <__fp_round+0x18>
     eee:	60 ff       	sbrs	r22, 0
     ef0:	04 c0       	rjmp	.+8      	; 0xefa <__fp_round+0x20>
     ef2:	6f 5f       	subi	r22, 0xFF	; 255
     ef4:	7f 4f       	sbci	r23, 0xFF	; 255
     ef6:	8f 4f       	sbci	r24, 0xFF	; 255
     ef8:	9f 4f       	sbci	r25, 0xFF	; 255
     efa:	08 95       	ret

00000efc <__fp_split3>:
     efc:	57 fd       	sbrc	r21, 7
     efe:	90 58       	subi	r25, 0x80	; 128
     f00:	44 0f       	add	r20, r20
     f02:	55 1f       	adc	r21, r21
     f04:	59 f0       	breq	.+22     	; 0xf1c <__fp_splitA+0x10>
     f06:	5f 3f       	cpi	r21, 0xFF	; 255
     f08:	71 f0       	breq	.+28     	; 0xf26 <__fp_splitA+0x1a>
     f0a:	47 95       	ror	r20

00000f0c <__fp_splitA>:
     f0c:	88 0f       	add	r24, r24
     f0e:	97 fb       	bst	r25, 7
     f10:	99 1f       	adc	r25, r25
     f12:	61 f0       	breq	.+24     	; 0xf2c <__fp_splitA+0x20>
     f14:	9f 3f       	cpi	r25, 0xFF	; 255
     f16:	79 f0       	breq	.+30     	; 0xf36 <__fp_splitA+0x2a>
     f18:	87 95       	ror	r24
     f1a:	08 95       	ret
     f1c:	12 16       	cp	r1, r18
     f1e:	13 06       	cpc	r1, r19
     f20:	14 06       	cpc	r1, r20
     f22:	55 1f       	adc	r21, r21
     f24:	f2 cf       	rjmp	.-28     	; 0xf0a <__fp_split3+0xe>
     f26:	46 95       	lsr	r20
     f28:	f1 df       	rcall	.-30     	; 0xf0c <__fp_splitA>
     f2a:	08 c0       	rjmp	.+16     	; 0xf3c <__fp_splitA+0x30>
     f2c:	16 16       	cp	r1, r22
     f2e:	17 06       	cpc	r1, r23
     f30:	18 06       	cpc	r1, r24
     f32:	99 1f       	adc	r25, r25
     f34:	f1 cf       	rjmp	.-30     	; 0xf18 <__fp_splitA+0xc>
     f36:	86 95       	lsr	r24
     f38:	71 05       	cpc	r23, r1
     f3a:	61 05       	cpc	r22, r1
     f3c:	08 94       	sec
     f3e:	08 95       	ret

00000f40 <__fp_zero>:
     f40:	e8 94       	clt

00000f42 <__fp_szero>:
     f42:	bb 27       	eor	r27, r27
     f44:	66 27       	eor	r22, r22
     f46:	77 27       	eor	r23, r23
     f48:	cb 01       	movw	r24, r22
     f4a:	97 f9       	bld	r25, 7
     f4c:	08 95       	ret

00000f4e <__mulsf3>:
     f4e:	0e 94 ba 07 	call	0xf74	; 0xf74 <__mulsf3x>
     f52:	0c 94 6d 07 	jmp	0xeda	; 0xeda <__fp_round>
     f56:	0e 94 5f 07 	call	0xebe	; 0xebe <__fp_pscA>
     f5a:	38 f0       	brcs	.+14     	; 0xf6a <__mulsf3+0x1c>
     f5c:	0e 94 66 07 	call	0xecc	; 0xecc <__fp_pscB>
     f60:	20 f0       	brcs	.+8      	; 0xf6a <__mulsf3+0x1c>
     f62:	95 23       	and	r25, r21
     f64:	11 f0       	breq	.+4      	; 0xf6a <__mulsf3+0x1c>
     f66:	0c 94 56 07 	jmp	0xeac	; 0xeac <__fp_inf>
     f6a:	0c 94 5c 07 	jmp	0xeb8	; 0xeb8 <__fp_nan>
     f6e:	11 24       	eor	r1, r1
     f70:	0c 94 a1 07 	jmp	0xf42	; 0xf42 <__fp_szero>

00000f74 <__mulsf3x>:
     f74:	0e 94 7e 07 	call	0xefc	; 0xefc <__fp_split3>
     f78:	70 f3       	brcs	.-36     	; 0xf56 <__mulsf3+0x8>

00000f7a <__mulsf3_pse>:
     f7a:	95 9f       	mul	r25, r21
     f7c:	c1 f3       	breq	.-16     	; 0xf6e <__mulsf3+0x20>
     f7e:	95 0f       	add	r25, r21
     f80:	50 e0       	ldi	r21, 0x00	; 0
     f82:	55 1f       	adc	r21, r21
     f84:	62 9f       	mul	r22, r18
     f86:	f0 01       	movw	r30, r0
     f88:	72 9f       	mul	r23, r18
     f8a:	bb 27       	eor	r27, r27
     f8c:	f0 0d       	add	r31, r0
     f8e:	b1 1d       	adc	r27, r1
     f90:	63 9f       	mul	r22, r19
     f92:	aa 27       	eor	r26, r26
     f94:	f0 0d       	add	r31, r0
     f96:	b1 1d       	adc	r27, r1
     f98:	aa 1f       	adc	r26, r26
     f9a:	64 9f       	mul	r22, r20
     f9c:	66 27       	eor	r22, r22
     f9e:	b0 0d       	add	r27, r0
     fa0:	a1 1d       	adc	r26, r1
     fa2:	66 1f       	adc	r22, r22
     fa4:	82 9f       	mul	r24, r18
     fa6:	22 27       	eor	r18, r18
     fa8:	b0 0d       	add	r27, r0
     faa:	a1 1d       	adc	r26, r1
     fac:	62 1f       	adc	r22, r18
     fae:	73 9f       	mul	r23, r19
     fb0:	b0 0d       	add	r27, r0
     fb2:	a1 1d       	adc	r26, r1
     fb4:	62 1f       	adc	r22, r18
     fb6:	83 9f       	mul	r24, r19
     fb8:	a0 0d       	add	r26, r0
     fba:	61 1d       	adc	r22, r1
     fbc:	22 1f       	adc	r18, r18
     fbe:	74 9f       	mul	r23, r20
     fc0:	33 27       	eor	r19, r19
     fc2:	a0 0d       	add	r26, r0
     fc4:	61 1d       	adc	r22, r1
     fc6:	23 1f       	adc	r18, r19
     fc8:	84 9f       	mul	r24, r20
     fca:	60 0d       	add	r22, r0
     fcc:	21 1d       	adc	r18, r1
     fce:	82 2f       	mov	r24, r18
     fd0:	76 2f       	mov	r23, r22
     fd2:	6a 2f       	mov	r22, r26
     fd4:	11 24       	eor	r1, r1
     fd6:	9f 57       	subi	r25, 0x7F	; 127
     fd8:	50 40       	sbci	r21, 0x00	; 0
     fda:	9a f0       	brmi	.+38     	; 0x1002 <__mulsf3_pse+0x88>
     fdc:	f1 f0       	breq	.+60     	; 0x101a <__mulsf3_pse+0xa0>
     fde:	88 23       	and	r24, r24
     fe0:	4a f0       	brmi	.+18     	; 0xff4 <__mulsf3_pse+0x7a>
     fe2:	ee 0f       	add	r30, r30
     fe4:	ff 1f       	adc	r31, r31
     fe6:	bb 1f       	adc	r27, r27
     fe8:	66 1f       	adc	r22, r22
     fea:	77 1f       	adc	r23, r23
     fec:	88 1f       	adc	r24, r24
     fee:	91 50       	subi	r25, 0x01	; 1
     ff0:	50 40       	sbci	r21, 0x00	; 0
     ff2:	a9 f7       	brne	.-22     	; 0xfde <__mulsf3_pse+0x64>
     ff4:	9e 3f       	cpi	r25, 0xFE	; 254
     ff6:	51 05       	cpc	r21, r1
     ff8:	80 f0       	brcs	.+32     	; 0x101a <__mulsf3_pse+0xa0>
     ffa:	0c 94 56 07 	jmp	0xeac	; 0xeac <__fp_inf>
     ffe:	0c 94 a1 07 	jmp	0xf42	; 0xf42 <__fp_szero>
    1002:	5f 3f       	cpi	r21, 0xFF	; 255
    1004:	e4 f3       	brlt	.-8      	; 0xffe <__mulsf3_pse+0x84>
    1006:	98 3e       	cpi	r25, 0xE8	; 232
    1008:	d4 f3       	brlt	.-12     	; 0xffe <__mulsf3_pse+0x84>
    100a:	86 95       	lsr	r24
    100c:	77 95       	ror	r23
    100e:	67 95       	ror	r22
    1010:	b7 95       	ror	r27
    1012:	f7 95       	ror	r31
    1014:	e7 95       	ror	r30
    1016:	9f 5f       	subi	r25, 0xFF	; 255
    1018:	c1 f7       	brne	.-16     	; 0x100a <__mulsf3_pse+0x90>
    101a:	fe 2b       	or	r31, r30
    101c:	88 0f       	add	r24, r24
    101e:	91 1d       	adc	r25, r1
    1020:	96 95       	lsr	r25
    1022:	87 95       	ror	r24
    1024:	97 f9       	bld	r25, 7
    1026:	08 95       	ret

00001028 <__umulhisi3>:
    1028:	a2 9f       	mul	r26, r18
    102a:	b0 01       	movw	r22, r0
    102c:	b3 9f       	mul	r27, r19
    102e:	c0 01       	movw	r24, r0
    1030:	a3 9f       	mul	r26, r19
    1032:	70 0d       	add	r23, r0
    1034:	81 1d       	adc	r24, r1
    1036:	11 24       	eor	r1, r1
    1038:	91 1d       	adc	r25, r1
    103a:	b2 9f       	mul	r27, r18
    103c:	70 0d       	add	r23, r0
    103e:	81 1d       	adc	r24, r1
    1040:	11 24       	eor	r1, r1
    1042:	91 1d       	adc	r25, r1
    1044:	08 95       	ret

00001046 <_exit>:
    1046:	f8 94       	cli

00001048 <__stop_program>:
    1048:	ff cf       	rjmp	.-2      	; 0x1048 <__stop_program>
